{"version":3,"sources":["locales sync /^/.//.*//appconfiguration/.json$","resources/icons/configure.svg","components/AppToolBar.jsx","resources/icons/feedback.svg","i18n.js","utils/Feedback.jsx","resources/icons/android.svg","resources/icons/ios.svg","resources/icons/web.svg","resources/icons/windows.svg","resources/icons/type/android.svg","resources/icons/type/ios.svg","resources/icons/type/web.svg","resources/icons/type/desktop.svg","utils/Constants.js","utils/Notification.jsx","utils/UUID.js","utils/Substitutor.jsx","utils/Tooltip.jsx","utils/AriaUtils.js","utils/DebugUtils.js","resources/icons/propagate.svg","components/AppTests.jsx","components/AppDetails.jsx","utils/Validator.jsx","utils/AppIconUtils.js","utils/AppIconSelector.jsx","components/AppFormWeb.jsx","utils/AccessibleDropdown.jsx","utils/AppInfoParserUtils.js","resources/icons/drop.svg","utils/AppFileSelector.jsx","resources/icons/info.svg","components/AppFormAndroid.jsx","components/AppFormIos.jsx","components/AppFormDesktop.jsx","components/AppFormAdvancedOptions.jsx","components/AppForm.jsx","resources/icons/warning.svg","utils/ConfirmDialog.jsx","resources/icons/search.svg","resources/icons/edit.svg","resources/icons/delete.svg","components/AppViewer.jsx","AppConfiguration.jsx","serviceWorker.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","AppToolBar","state","screenLocked","dialerToggle","event","isSMS","className","src","SVG_Configure","alt","Component","resources","forEach","l","require","console","log","i18n","use","initReactI18next","LngDetector","init","fallbackLng","lowerCaseLng","detection","order","keySeparator","interpolation","escapeValue","Feedback","href","rel","target","t","SVG_Feedback","backendPort","URLSearchParams","window","location","search","get","APIBaseUrl","MoebServiceUrl","Debug","isDebugPort","HomeApp","PlatformName","Platform","type","label","svg","svgtype","dlgAddTitle","dlgEditTitle","SVG_Android","SVG_Android_Type","SVG_Windows","SVG_Windows_Type","SVG_Ios","SVG_Ios_Type","SVG_Web","SVG_Web_Type","AppProperty","ID","TYPE","DATE","CREATOR","NAME","VERSION","DESCRIPTION","PACKAGE","ACTIVITY","BUNDLE","WINTYPE","WINEXE","WINARGS","WINDIR","URL","SUBSTITUTERS","INTERNALVERSION","ICON","FILE","DEVICE","SubstName","AndroidTypeName","AndroidType","tooltip","IOSTypeName","IOSType","DesktopTypeName","DesktopType","TestProperty","Notification","growl","text","highlights","msg","summary","closable","this","show","h","highlight","title","document","querySelector","innerHTML","replace","growlClassName","pageYOffset","ref","el","GetUUID","c","r","Math","random","toString","renderSubstitutedProp","properties","propName","substName","propValue","substituters","uuid","splits","currentOffset","sort","s1","s2","offset","s","push","value","substr","length","colorb","colorf","splitProperty","index","key","placement","delay","style","backgroundColor","color","Tooltip","props","AriaType","setAriaProps","selector","querySelectorAll","elt","setAttribute","ARIA_LABELLEDBY","ARIA_LABEL","setDialogProps","element","getAttribute","setRadioProps","child","setCheckProps","setSplitProps","firstElementChild","setExpandProps","setDropdownProps","getPrettyJSON","obj","less","jsonString","JSON","stringify","k","v","undefined","replaceAll","AppTests","onSort","setState","sortOrder","onNavigate","path","navigating","url","axios","then","notification","catch","onPropagate","keyCode","selectedTests","propagating","appId","join","getAppTests","finally","onTestsSelectionChange","checked","splice","indexOf","appTests","renderSelection","bind","renderPath","_isMounted","focusListener","workspace","addEventListener","removeEventListener","ifModified","data","appid","post","response","tests","rowData","checkboxClassName","appVersion","inputId","onChange","includes","testPathClassName","onClick","dangerouslySetInnerHTML","__html","isEmpty","headerLabel","headerClassName","propagateImgClassName","sortIconClassName","tabIndex","onKeyDown","SVG_Propagate","dataKey","sortField","field","width","body","sortable","NA","AppDetails","showAllDebugProps","appDetails","appVerdict","app","appIcon","associatedTests","updateTestsHeight","ResizeObserver","height","clientHeight","offsetTop","observe","display","maxHeight","filter","p","appType","isWindows","isWeb","renderAndroidDetails","renderIosDetails","renderWebDetails","renderWindowsDetails","onLabel","offLabel","ValidatorErrorMsg","ILLEGAL_CHARACTER","ILLEGAL_FORMAT","URL_INVALID","URL_PROTOCOL_MISSING","URL_DOMAIN_INCORRECT","WIN_SUFFIX_MISSING","WIN_DRIVE_MISSING","WIN_PATH_MISSING","WIN_EXT_MISSING","isAndroidPackage","str","ret","result","error","RegExp","test","isIosBundleId","isWindowsId","isWindowsPath","getWebIcon","domainUrl","urlObject","origin","pathname","exception","Promise","reject","img","Image","onload","naturalWidth","naturalHeight","onerror","getScaledIcon","w","dataURL","currentSrc","canvas","createElement","ctx","getContext","drawImage","toDataURL","AppIconSelector","inputIconFile","click","onClickBadge","isSelected","stopPropagation","onRemove","onSelectIcon","file","fr","FileReader","readAsDataURL","onSelect","currentTarget","defaultIcon","platform","icon","accept","files","getIcon","AppFormWeb","suggestAppProps","validateURL","appProperties","setAppProperty","hostname","timeout","clearTimeout","validationTimeout","onValidation","isValidURL","setTimeout","isWebURL","startsWith","iconUrl","resetIcon","onRemoveIcon","isSelectedIcon","lblClassName","errorMsg","htmlFor","name","placeholder","onValueChange","onFocus","onBlur","autoComplete","AccessibleDropdown","valueSubmitted","onSubmit","dropdown","filterInput","focus","filterInputFound","input","originalEvent","container","options","ariaLabel","filterPlaceholder","disabled","getAndroidProps","package","application","String","fromCharCode","activity","launcherActivities","versionName","pbThreshold","AppFileSelector","onDrag","preventDefault","onDragEnter","dragEnterCounter","dragging","onDragLeave","onDrop","parse","dataTransfer","onInputFileClick","inputFile","onCancel","onSelection","onIconLoad","parsing","isAndroid","pbTimeout","endsWith","startTime","Date","now","AppInfoParser","CFBundleIdentifier","CFBundleName","CFBundleShortVersionString","getiOSProps","parsingTime","parsingClassName","draggingClassName","onDragOver","onLoad","SVG_Drop","AppFormAndroid","validatePackage","isValidActivity","validationPkgTimeout","isValidPackage","isValidPkgResult","isValidActResult","validateActivity","validationActTimeout","onAndroidTypeChange","androidType","devices","getDevices","onApkSelection","selection","resetDeviceForm","onApkIconLoad","onPackageChange","resetApkForm","onDeviceSelection","selectedDevice","selectedPackage","emulatorId","onPackageSelection","devicesRunningTask","packages","packagesRunningTask","getPackages","pullApk","delete","d","deviceType","toLowerCase","model","deviceId","packList","responseType","File","apkProps","lblPkgClassName","pkgErrorMsg","actErrorMsg","lblActClassName","isSelectedDevice","onError","SVG_Info","at","renderManualType","renderApkType","renderDeviceType","AppFormIos","validateBundleId","isValidBundleId","onIpaSelection","onIpaIconLoad","onIOSTypeChange","iOSType","onBundleIdChange","resetIpaForm","renderIpaType","AppFormDesktop","validateExe","isValidExe","isExePath","substring","lastIndexOf","onDesktopTypeChange","appExe","lbl","dt","AppFormAdvancedOptions","panelCollapsed","legend","toggleable","collapsed","onToggle","AppForm","appProps","valid","isSubFormValid","addApplication","status","onActionPerformed","typeFilter","editApplication","put","notifyApplicationChange","handler","canAddApplication","visible","editMode","mainInput","dlg","prevProps","values","ReactDOM","findDOMNode","getElementsByClassName","plaformData","header","okLbl","okHandler","footer","onHide","errorClassName","appendTo","focusOnShow","spellCheck","ConfirmDialog","onConfirm","subMsg","SVG_warning","AppViewer","refreshList","appFormType","getAppsList","expandedRows","deletingApp","editingApp","onEdit","onDelete","warning","deleteApp","appname","onFilterChange","onAddBtnToggle","addBtnVisible","addBtn","hide","appsList","globalFilter","renderName","renderActions","rowExpansionTemplate","addItems","command","onAdd","selectedAppId","appsListString","getWorkspace","selApp","scrollIntoView","behavior","block","inline","localized_string","applications","pData","divClassName","getAppIcon","version","date","toLocaleDateString","language","toLocaleTimeString","SVG_Edit","SVG_Delete","role","SVG_Search","onInput","aria-label","confirmVisible","confirmMsg","rowClassName","emptyMessage","onRowToggle","onRowClick","expander","paddingTop","renderVerdict","renderType","renderVersion","renderDate","AppConfiguration","Boolean","match","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.52e30ef2.chunk.js","sourcesContent":["var map = {\n\t\"./cs/appconfiguration.json\": 119,\n\t\"./de/appconfiguration.json\": 120,\n\t\"./en/appconfiguration.json\": 121,\n\t\"./es/appconfiguration.json\": 122,\n\t\"./fr/appconfiguration.json\": 123,\n\t\"./hu/appconfiguration.json\": 124,\n\t\"./it/appconfiguration.json\": 125,\n\t\"./ja/appconfiguration.json\": 126,\n\t\"./ko/appconfiguration.json\": 127,\n\t\"./pl/appconfiguration.json\": 128,\n\t\"./pt-br/appconfiguration.json\": 129,\n\t\"./ru/appconfiguration.json\": 130,\n\t\"./tr/appconfiguration.json\": 131,\n\t\"./zh-cn/appconfiguration.json\": 132,\n\t\"./zh-tw/appconfiguration.json\": 133\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 118;","export default __webpack_public_path__ + \"static/media/configure.b976bf71.svg\";","import React, { Component } from 'react';\r\nimport './AppToolBar.scss';\r\nimport SVG_Configure from '../resources/icons/configure.svg';\r\n\r\nexport class AppToolBar extends Component {\r\n  constructor() {\r\n      super();\r\n      this.state = {\r\n        screenLocked: false,\r\n        dialerToggle: { event: null, isSMS: false }\r\n      };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <nav className=\"tb\"> \r\n        <div className=\"tb-content\">\r\n          <span className=\"tb-button\">\r\n            <img src={SVG_Configure} alt='' />\r\n          </span>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppToolBar;","export default __webpack_public_path__ + \"static/media/feedback.e11e6b88.svg\";","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport LngDetector from 'i18next-browser-languagedetector';\r\n\r\nconst langs = ['cs', 'de', 'en', 'es', 'fr', 'hu', 'it', 'ja', 'ko', 'pl', 'pt-br', 'ru', 'tr', 'zh-cn', 'zh-tw'];\r\n\r\nlet resources = {};\r\nlangs.forEach(l => {\r\n  try {\r\n    resources[l] = { 'translation': require('./locales/' + l + '/appconfiguration.json') };\r\n  }\r\n  catch(e) {\r\n    console.log('Loading locale: ' + l + ' failed');\r\n  }\r\n})\r\n\r\ni18n\r\n  .use(initReactI18next)\r\n  .use(new LngDetector())\r\n  .init({\r\n    resources,\r\n    fallbackLng: 'en',\r\n    lowerCaseLng: true,\r\n    \r\n    detection: {\r\n      order: ['navigator', 'querystring', 'cookie', 'localStorage', 'htmlTag', 'path', 'subdomain']\r\n    },\r\n    \r\n    keySeparator: '.', // we do not use keys in form messages.welcome\r\n\r\n    interpolation: {\r\n      escapeValue: false // react already safes from xss\r\n    }\r\n  });\r\n\r\nexport default i18n;","import React, { Component } from 'react';\r\nimport './Feedback.scss';\r\nimport { VENDOR } from '../vendor/vars';\r\nimport SVG_Feedback from '../resources/icons/feedback.svg';\r\nimport i18n from '../i18n';\r\n\r\nclass Feedback extends Component {\r\n    render() {\r\n        let feedBackUrl = (VENDOR === 'IBM')\r\n         ? 'mailto:devops24@us.ibm.com'\r\n         : 'https://onetest-ideas.hcltechsw.com/?category=6820342368443829403';\r\n        return (\r\n            <a\r\n              className=\"feedback\" \r\n              href={feedBackUrl}\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\">\r\n                {i18n.t('feedback.title')}\r\n                <img src={SVG_Feedback} alt=\"\" />\r\n            </a>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Feedback;\r\n","export default __webpack_public_path__ + \"static/media/android.78fb87de.svg\";","export default __webpack_public_path__ + \"static/media/ios.f6564556.svg\";","export default __webpack_public_path__ + \"static/media/web.5227f4ea.svg\";","export default __webpack_public_path__ + \"static/media/windows.11ba0fc5.svg\";","export default __webpack_public_path__ + \"static/media/android.f5501e85.svg\";","export default __webpack_public_path__ + \"static/media/ios.46f5fd74.svg\";","export default __webpack_public_path__ + \"static/media/web.406dab1d.svg\";","export default __webpack_public_path__ + \"static/media/desktop.5a07a150.svg\";","import i18n from '../i18n';\r\nimport SVG_Android from '../resources/icons/android.svg';\r\nimport SVG_Ios from '../resources/icons/ios.svg';\r\nimport SVG_Web from '../resources/icons/web.svg';\r\nimport SVG_Windows from '../resources/icons/windows.svg';\r\nimport SVG_Android_Type from '../resources/icons/type/android.svg';\r\nimport SVG_Ios_Type from '../resources/icons/type/ios.svg';\r\nimport SVG_Web_Type from '../resources/icons/type/web.svg';\r\nimport SVG_Windows_Type from '../resources/icons/type/desktop.svg';\r\n\r\nconst backendPort = new URLSearchParams(window.location.search).get('backendPort') || '7878';\r\nexport const APIBaseUrl = 'http://localhost:' + backendPort;\r\n\r\nexport let MoebServiceUrl = APIBaseUrl + '/moeb/service';\r\n\r\nexport const Debug = new URLSearchParams(window.location.search).get('debug') === 'gdnm';\r\nexport const isDebugPort = (backendPort === '8080');\r\nif (isDebugPort) {\r\n    MoebServiceUrl = 'http://localhost:7878/moeb/service'; \r\n}\r\n\r\nexport const HomeApp = 'home';\r\n\r\nexport const PlatformName = {\r\n    ALL: 'ALL',\r\n    ANDROID: 'APPIUM_ANDROID',\r\n    IOS: 'APPIUM_IOS',\r\n    WEB: 'WEBUI',\r\n    WINDOWS: 'WINDOWS'\r\n}\r\n\r\nexport const Platform = [\r\n    {type: 'ALL', label: i18n.t('constants.all'), svg: '', svgtype: '',\r\n        dlgAddTitle: '', dlgEditTitle: ''},\r\n    {type: PlatformName.ANDROID, label: i18n.t('constants.android'), svg: SVG_Android, svgtype: SVG_Android_Type,\r\n        dlgAddTitle: i18n.t('constants.add-android-app'), dlgEditTitle: i18n.t('constants.edit-android-app')},\r\n    {type: PlatformName.WINDOWS, label: i18n.t('constants.desktop'), svg: SVG_Windows, svgtype: SVG_Windows_Type,\r\n        dlgAddTitle: i18n.t('constants.add-desktop-app'), dlgEditTitle: i18n.t('constants.edit-desktop-app')},\r\n    {type: PlatformName.IOS, label: i18n.t('constants.ios'), svg: SVG_Ios, svgtype: SVG_Ios_Type,\r\n        dlgAddTitle: i18n.t('constants.add-ios-app'), dlgEditTitle: i18n.t('constants.edit-ios-app')},\r\n    {type: PlatformName.WEB, label: i18n.t('constants.web'), svg: SVG_Web, svgtype: SVG_Web_Type,\r\n        dlgAddTitle: i18n.t('constants.add-web-app'), dlgEditTitle: i18n.t('constants.edit-web-app')}\r\n]\r\n\r\nexport const AppProperty = {\r\n    ID: 'appid',\r\n    TYPE: 'appType',\r\n    DATE: 'creationDate',\r\n    CREATOR: 'creatorName',\r\n    NAME: 'appname',\r\n    VERSION: 'appversion',\r\n    DESCRIPTION: 'appDescription',\r\n    PACKAGE: 'appPackage',\r\n    ACTIVITY: 'appActivity',\r\n    BUNDLE: 'iOSbundleID',\r\n    WINTYPE: 'windowsAppType',\r\n    WINEXE: 'winExeInfo',\r\n    WINARGS: 'winArgs',\r\n    WINDIR: 'winWorkDir',\r\n    URL: 'webURL',\r\n    SUBSTITUTERS: 'substituters',\r\n    INTERNALVERSION: 'internalVersion',\r\n    ICON: 'appIcon',\r\n    FILE: 'appFile',\r\n    DEVICE: 'device'\r\n}\r\n\r\nexport const SubstName = {\r\n    SUBSTITUTERTAB: 'substituterTab',\r\n    SUBSTITUTERP1: 'substituterP1',\r\n    SUBSTITUTERP2: 'substituterP2'\r\n}\r\n\r\nexport const AndroidTypeName = {\r\n    MANUAL: 'MANUAL',\r\n    APK: 'APK',\r\n    DEVICE: 'DEVICE'\r\n}\r\n\r\nexport let AndroidType = [\r\n    {type: AndroidTypeName.MANUAL, label: i18n.t('constants.manual-lbl'), tooltip: ''},\r\n    {type: AndroidTypeName.APK, label: i18n.t('constants.apk-lbl'), tooltip: ''},\r\n    {type: AndroidTypeName.DEVICE, label: i18n.t('constants.device-lbl'), tooltip: ''}\r\n]\r\n\r\nexport const IOSTypeName = {\r\n    MANUAL: 'MANUAL',\r\n    IPA: 'IPA'\r\n}\r\n\r\nexport const IOSType = [\r\n    {type: IOSTypeName.MANUAL, label: i18n.t('constants.manual-lbl'), tooltip: ''},\r\n    {type: IOSTypeName.IPA, label: i18n.t('constants.ipa-lbl'), tooltip: ''}\r\n]\r\n\r\nexport const DesktopTypeName = {\r\n    EXE: 'EXE',\r\n    UWP: 'UWP'\r\n}\r\n\r\nexport const DesktopType = [\r\n    {type: DesktopTypeName.EXE, label: i18n.t('constants.exe-lbl'), tooltip: i18n.t('constants.exe-tooltip')},\r\n    {type: DesktopTypeName.UWP, label: i18n.t('constants.uwp-lbl'), tooltip: i18n.t('constants.uwp-tooltip')}\r\n]\r\n\r\nexport const TestProperty = {\r\n    ID: 'testuid',\r\n    APPID: 'appid',\r\n    PATH: 'testPath',\r\n    VERSION: 'testVersion',\r\n    CREATOR: 'creatorName',\r\n    WORKSPACE: 'workspace'\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Notification.scss';\r\nimport { Growl } from 'primereact/growl';\r\n\r\nexport class Notification extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.growl = null;\r\n    }\r\n\r\n    show(text, highlights) {\r\n        const msg = { summary: text, closable: true };\r\n        this.growl.show(msg);\r\n\r\n        highlights && highlights.forEach(h => {\r\n            this.highlight(h);\r\n        });\r\n    }\r\n\r\n    highlight(text) {\r\n        const title = document.querySelector('.p-growl-title');\r\n        title.innerHTML = title.innerHTML.replace(text, '<span>' + text + '</span>');\r\n    }\r\n\r\n    render() {\r\n        const growlClassName = (window.pageYOffset > 50) ? 'top' : '';\r\n        return (\r\n            <Growl ref={el => (this.growl = el)} className={growlClassName} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notification;\r\n","// RFC4122 version 4\r\nexport function GetUUID() {\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\r\n        var r = Math.random() * 16 | 0, v = c === 'x' ? r : ((r & 0x3) | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\n","import React from 'react';\r\nimport { UncontrolledTooltip } from 'reactstrap';\r\nimport { GetUUID } from '../utils/UUID';\r\nimport { AppProperty, SubstName } from './Constants';\r\n\r\nfunction splitProperty(substituters, propValue, substName) {\r\n    let splits = [];\r\n    let currentOffset = 0;\r\n    substituters && substituters[substName]\r\n        .sort((s1, s2) => s1.offset - s2.offset)\r\n        .forEach(s => {\r\n            if (currentOffset !== s.offset) {\r\n                splits.push({ value: propValue.substr(currentOffset, s.offset - currentOffset) });\r\n            }\r\n            splits.push({ value: propValue.substr(s.offset, s.length), colorb: s.colorb, colorf: s.colorf, tooltip: s.tooltip });\r\n            currentOffset = s.offset + s.length;\r\n    });\r\n    (currentOffset !== propValue.length) && splits.push({ value: propValue.substr(currentOffset) });\r\n\r\n    return splits;\r\n}\r\n\r\nexport function renderSubstitutedProp(properties, propName, substName) {\r\n    const propValue = properties[propName];\r\n    if (!propValue) return;\r\n    \r\n    substName = substName || SubstName.SUBSTITUTERTAB; // Default value\r\n    const substituters = properties[AppProperty.SUBSTITUTERS];\r\n    if (!substituters || !substituters[substName]) return propValue;\r\n\r\n    const uuid = '_' + GetUUID();\r\n    return (\r\n        <>\r\n            {splitProperty(substituters, propValue, substName).map((s, index) => {\r\n                return (\r\n                    <span key={index}>\r\n                        {s.tooltip && <UncontrolledTooltip placement=\"bottom\" target={uuid + '_' + index} delay={{ show: 200 }}>\r\n                            {s.tooltip}\r\n                        </UncontrolledTooltip>}\r\n                        <span id={uuid + '_' + index} className=\"fake\" style={{ backgroundColor: s.colorb, color: s.colorf }}>{s.value}</span>\r\n                    </span>\r\n                )\r\n            })}\r\n        </>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { UncontrolledTooltip } from 'reactstrap';\r\n\r\nexport class Tooltip extends Component {\r\n\r\n  render() {\r\n    const placement = this.props.placement || 'bottom';\r\n    return (\r\n        <UncontrolledTooltip placement={placement} target={this.props.id} delay={{ show: 500 }}>\r\n            {this.props.text}\r\n        </UncontrolledTooltip>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tooltip;\r\n","export const AriaType = {\r\n    DIALOG: 'dialog',\r\n    RADIO: 'radio',\r\n    CHECK: 'check',\r\n    SPLIT: 'split',\r\n    EXPAND: 'expand',\r\n    DROPDOWN: 'dropdown'\r\n}\r\n\r\nexport function setAriaProps(type, selector) {\r\n    try {\r\n        switch(type) {\r\n            case AriaType.DIALOG:\r\n                setDialogProps(selector);\r\n                break;\r\n            case AriaType.RADIO:\r\n                setRadioProps(selector);\r\n                break;\r\n            case AriaType.CHECK:\r\n                setCheckProps(selector);\r\n                break;\r\n            case AriaType.SPLIT:\r\n                setSplitProps(selector);\r\n                break;\r\n            case AriaType.EXPAND:\r\n                setExpandProps(selector);\r\n                break;\r\n            case AriaType.DROPDOWN:\r\n                setDropdownProps(selector);\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n    catch(e) {\r\n        console.log('Can not set ARIA properties');\r\n    }\r\n}\r\n\r\nexport function setAriaPropsAll(controls) {\r\n    controls.forEach(c => {\r\n        setAriaProps(c.type, c.selector)\r\n    });\r\n}\r\n\r\nconst ARIA_LABEL = 'aria-label';\r\nconst ARIA_LABELLEDBY = 'aria-labelledby';\r\n\r\nfunction setDialogProps(selector) {\r\n    document.querySelectorAll(selector).forEach(elt => {\r\n        elt.setAttribute(ARIA_LABELLEDBY, elt.id);\r\n        elt.setAttribute(ARIA_LABEL, elt.id);\r\n    });\r\n}\r\n\r\nfunction setExpandProps(selector) {\r\n    document.querySelectorAll(selector).forEach(element => {\r\n        element.firstElementChild.setAttribute(ARIA_LABEL, 'expand');\r\n    });\r\n}\r\n\r\nfunction setRadioProps(selector) {\r\n    document.querySelectorAll(selector).forEach(element => {\r\n        element.querySelector('.p-radiobutton-box')\r\n            .setAttribute(ARIA_LABEL, element.getAttribute(ARIA_LABEL));\r\n    });\r\n}\r\n\r\nfunction setCheckProps(selector) {\r\n    document.querySelectorAll(selector).forEach(element => {\r\n        element.querySelectorAll('div.p-checkbox-box, input').forEach(child => {\r\n            child.setAttribute(ARIA_LABEL, element.getAttribute(ARIA_LABEL));\r\n        });\r\n    });\r\n}\r\n\r\nfunction setSplitProps(selector) {\r\n    document.querySelectorAll(selector).forEach(element => {\r\n        element.querySelectorAll('.p-button').forEach(child => {\r\n            child.setAttribute(ARIA_LABEL, element.getAttribute(ARIA_LABEL));\r\n        });\r\n    });\r\n}\r\n\r\nfunction setDropdownProps(selector) {\r\n    document.querySelectorAll(selector).forEach(element => {\r\n        element.querySelector('.p-dropdown-trigger')\r\n            .setAttribute(ARIA_LABEL, element.querySelector('input').getAttribute(ARIA_LABEL));\r\n    });\r\n}\r\n","export function getPrettyJSON(obj, highlight, less) {\r\n    let jsonString = JSON.stringify(obj,\r\n        function(k, v) {\r\n            if (!v) return (less) ? undefined : '';\r\n            return (v.length > 100)\r\n                ? v.substr(0, 100) + '... [' + v.length + ' bytes]'\r\n                : v;\r\n        },\r\n        5);\r\n\r\n    if (highlight) {\r\n        try {\r\n            jsonString = jsonString.replaceAll(/\"(.*)\":/g, '\"<b>$1</b>\":');\r\n        }\r\n        catch {\r\n            console.log('Could not highlight JSON keys');\r\n        }\r\n    }\r\n    \r\n    return jsonString;\r\n}\r\n","export default __webpack_public_path__ + \"static/media/propagate.0b5d3a06.svg\";","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport './AppTests.scss';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport { Notification } from '../utils/Notification';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { APIBaseUrl, MoebServiceUrl, TestProperty, Debug, isDebugPort } from '../utils/Constants';\r\nimport { Tooltip } from '../utils/Tooltip';\r\nimport { AriaType, setAriaProps } from '../utils/AriaUtils';\r\nimport { getPrettyJSON } from '../utils/DebugUtils';\r\nimport SVG_Propagate from '../resources/icons/propagate.svg';\r\nimport i18n from '../i18n';\r\n\r\nexport class AppTests extends Component {\r\n  constructor() {\r\n    super();\r\n        this.state = {\r\n        appTests: [],\r\n        selectedTests: [],\r\n        sortOrder: 1,\r\n        navigating: false,\r\n        propagating: false\r\n    };\r\n    this.renderSelection = this.renderSelection.bind(this);\r\n    this.renderPath = this.renderPath.bind(this);\r\n    this.notification = null;\r\n    this._isMounted = false;\r\n    this.focusListener = () => {\r\n      if (this._isMounted) {\r\n          this.getAppTests(this.props.appId, true);\r\n      }\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    if (this.props.workspace !== null) {\r\n      this.getAppTests(this.props.appId);\r\n    }\r\n\r\n    // Refresh tests on focus\r\n    window.addEventListener('focus', this.focusListener, false);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this._isMounted = false;\r\n    window.removeEventListener('focus', this.focusListener, false);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    setAriaProps(AriaType.CHECK, '.act-checkbox');\r\n  }\r\n\r\n  getAppTests(appId, ifModified) {\r\n    // List all tests in debug mode\r\n    const workspace = (isDebugPort && this.props.workspace === '') ? null : this.props.workspace;\r\n    const data = { appid: appId, workspace };\r\n    const url = APIBaseUrl + '/tests/';\r\n    axios.post(url, data ).then(response => {\r\n        if (!this._isMounted) return;\r\n        \r\n        const appTests = response.data.tests || [];\r\n        if (!ifModified || JSON.stringify(this.state.appTests) !== JSON.stringify(appTests)) {\r\n          this.setState({ appTests });\r\n        }\r\n    })\r\n    .catch(() => {\r\n        console.log('Associated tests could not be retrieved');\r\n    });\r\n  }\r\n\r\n  onSort = () => {\r\n    this.setState({ sortOrder: -this.state.sortOrder });\r\n  }\r\n\r\n  onNavigate = (path) => {\r\n    this.setState({ navigating: true });\r\n    const msg = i18n.t('apptests.notification');\r\n    const url = MoebServiceUrl\r\n        + '/com.ibm.rational.test.lt.core.moeb.services.reports.IUnifiedReportService/'\r\n        + '?action=navigateToTest'\r\n        + '&testPath=' + path;\r\n    axios.get(url).then(() => {\r\n        this.notification.show(msg);\r\n        this.setState({ navigating: false });\r\n    })\r\n    .catch(() => {\r\n        console.log('Navigation failed');\r\n        this.notification.show(msg);\r\n        this.setState({ navigating: false });\r\n    });\r\n  }\r\n\r\n  onPropagate = (e) => {\r\n    if (e.keyCode && e.keyCode !== 13) return;\r\n    if (this.state.selectedTests.length === 0) return;\r\n    \r\n    this.setState({ propagating: true });\r\n    const msg = i18n.t('apptests.update-notification');\r\n    const url = MoebServiceUrl\r\n        + '/com.ibm.rational.test.lt.core.moeb.services.applications.IApplicationService/'\r\n        + '?action=propagate'\r\n        + '&appuid=' + this.props.appId\r\n        + '&testPaths=' + this.state.selectedTests.join();\r\n\r\n    axios.get(url).then(() => {\r\n          this.getAppTests(this.props.appId);\r\n        })\r\n        .catch(() => {\r\n          console.log('Propagation failed');\r\n        })\r\n        .finally(() => {\r\n          this.notification.show(msg);\r\n          this.setState({ selectedTests: [] });\r\n          this.setState({ propagating: false });\r\n        }\r\n    );\r\n  }\r\n\r\n  onTestsSelectionChange = e => {\r\n    let selectedTests = [...this.state.selectedTests];\r\n    if(e.checked) {\r\n        selectedTests.push(e.value);\r\n    }\r\n    else {\r\n        selectedTests.splice(selectedTests.indexOf(e.value), 1);\r\n    }\r\n\r\n    this.setState({selectedTests});\r\n  }\r\n\r\n  renderSelection(rowData) {\r\n    const checkboxClassName = (this.props.appVersion === rowData[TestProperty.VERSION]) ? 'disabled' : '';\r\n    return (\r\n        <span className=\"act-checkbox\">\r\n            <Checkbox\r\n                inputId={rowData[TestProperty.PATH]}\r\n                value={rowData[TestProperty.PATH]}\r\n                className={checkboxClassName}\r\n                onChange={this.onTestsSelectionChange}\r\n                checked={this.state.selectedTests.includes(rowData[TestProperty.PATH])} />\r\n        </span>\r\n    )\r\n  }\r\n\r\n  renderPath(rowData) {\r\n    let testPathClassName = (this.state.navigating) ? ' navigating' : '';\r\n    testPathClassName += Debug ? ' acd-debug' : '';\r\n    return (\r\n      <span\r\n        className={'acd-testpath' + testPathClassName}\r\n        onClick={() => this.onNavigate(rowData[TestProperty.PATH])}\r\n        dangerouslySetInnerHTML={\r\n          { __html: Debug ? getPrettyJSON(rowData, true, false) : rowData[TestProperty.PATH] }\r\n        } />\r\n    )\r\n  }\r\n\r\n  render() {\r\n    const isEmpty = (this.state.appTests.length === 0);\r\n    const headerLabel = isEmpty ? i18n.t('apptests.no-tests') : i18n.t('apptests.title');\r\n    const headerClassName = isEmpty ? '' : 'sortable';\r\n    let propagateImgClassName = (this.state.selectedTests.length === 0) ? ' disabled' : '';\r\n    if (this.state.propagating) {\r\n      propagateImgClassName += ' propagating';\r\n    }\r\n    const sortIconClassName = (this.state.sortOrder === 1) ? ' up' : ' down';\r\n    return (\r\n        <span className=\"acd-tests\">\r\n            <div className=\"acd-tests-header\">\r\n              {this.props.workspace === null ?\r\n                <div className=\"acd-loading\">\r\n                  <span/>\r\n                  {i18n.t('apptests.loading')}\r\n                </div>\r\n                :\r\n                <>\r\n                  <span className={headerClassName} onClick={this.onSort}>\r\n                      {headerLabel}\r\n                      <span className={'pi' + sortIconClassName} />\r\n                  </span>\r\n                  <Tooltip id={'_update' + this.props.appId} text={i18n.t('apptests.update-tooltip')} />\r\n                  <span id={'_update' + this.props.appId} className={'acd-propagate' + propagateImgClassName} tabIndex=\"0\"\r\n                    onClick={e => this.onPropagate(e)} onKeyDown={e => this.onPropagate(e)}>\r\n                      <img\r\n                          src={SVG_Propagate}\r\n                          alt='' />\r\n                  </span>\r\n                </>\r\n              }\r\n            </div>\r\n            <div className=\"acd-tests-table\">\r\n                <DataTable\r\n                    value={this.state.appTests}\r\n                    dataKey={TestProperty.ID}\r\n                    sortField={TestProperty.PATH}\r\n                    sortOrder={this.state.sortOrder} \r\n                    onSort={this.onSort}\r\n                    >\r\n                    <Column field=\"internalVersion\" style={{ width: '30px' }} body={this.renderSelection} />\r\n                    <Column field={TestProperty.PATH} className=\"acd-testpath\" body={this.renderPath} sortable/>\r\n                </DataTable>\r\n            </div>\r\n\r\n            <Notification ref={el => (this.notification = el)} />\r\n        </span>\t\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppTests;\r\n","import React, { Component } from 'react';\r\nimport './AppDetails.scss';\r\nimport { Platform, PlatformName, AppProperty, Debug, SubstName } from '../utils/Constants';\r\nimport { renderSubstitutedProp } from '../utils/Substitutor';\r\nimport { ToggleButton } from 'primereact/togglebutton';\r\nimport { GetUUID } from '../utils/UUID';\r\nimport AppTests from './AppTests';\r\nimport { getPrettyJSON } from '../utils/DebugUtils';\r\nimport i18n from '../i18n';\r\n\r\nconst NA = 'NA';\r\nconst PX = 'px';\r\n\r\nexport class AppDetails extends Component {\r\n    \r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n        showAllDebugProps: false\r\n    };\r\n    this.appDetails = null;\r\n    this.appVerdict = null;\r\n    this.app = null;\r\n    this.appIcon = null;\r\n    this.associatedTests = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateTestsHeight();\r\n\r\n    if (typeof ResizeObserver !== \"function\") return;\r\n\r\n    const resizeObserver = new ResizeObserver(() => {\r\n        // Update verdict bar height\r\n        if (this.appVerdict) {\r\n            this.appVerdict.style.height =\r\n                (this.appDetails.clientHeight - this.appVerdict.offsetTop) + PX;\r\n        }\r\n    });\r\n    resizeObserver.observe(this.appDetails);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.updateTestsHeight();\r\n  }\r\n\r\n  updateTestsHeight() {\r\n    if (!this.associatedTests || !this.appDetails) return;\r\n\r\n    this.associatedTests.style.display = 'none';\r\n    this.associatedTests.style.maxHeight = this.appDetails.clientHeight + PX;\r\n    this.associatedTests.style.display = 'flex';\r\n  }\r\n\r\n  renderAndroidDetails() {\r\n    return (\r\n        <>\r\n            <div className=\"acd-label\">{i18n.t('appdetails.package')}</div>\r\n            <div className=\"acd-main-value\">\r\n                <img src={this.appIcon} alt='' />\r\n                <span className=\"acd-subst-value\">\r\n                    {renderSubstitutedProp(this.app, AppProperty.PACKAGE, SubstName.SUBSTITUTERP1)}\r\n                </span>\r\n            </div>\r\n            <div className=\"acd-separator\" />\r\n            <div className=\"acd-label\">{i18n.t('appdetails.activity')}</div>\r\n            <span className=\"acd-subst-value\">\r\n                {renderSubstitutedProp(this.app, AppProperty.ACTIVITY)}\r\n            </span>\r\n        </>\r\n    );\r\n  }\r\n\r\n  renderIosDetails() {\r\n    return (\r\n        <>\r\n            <div className=\"acd-label\">{i18n.t('appdetails.bundle-id')}</div>\r\n            <div className=\"acd-main-value\">\r\n                <img src={this.appIcon} alt='' />\r\n                <span className=\"acd-subst-value\">\r\n                    {renderSubstitutedProp(this.app, AppProperty.BUNDLE)}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n  }\r\n\r\n  renderWebDetails() {\r\n    return (\r\n        <>\r\n            <div className=\"acd-label\">{i18n.t('appdetails.url')}</div>\r\n            <div className=\"acd-main-value\">\r\n                <img src={this.appIcon} alt='' />\r\n                <span className=\"acd-subst-value\">\r\n                    {renderSubstitutedProp(this.app, AppProperty.URL)}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n  }\r\n\r\n  renderWindowsDetails() {\r\n    return (\r\n        <>\r\n            {this.app[AppProperty.WINTYPE] === 'EXE' ? \r\n                <div className=\"acd-label\">{i18n.t('appdetails.exe-path')}</div>\r\n            :\r\n                <div className=\"acd-label\">{i18n.t('appdetails.win-id')}</div>\r\n            }\r\n            <div className=\"acd-main-value\">\r\n                <img src={this.appIcon} alt='' />\r\n                <span className=\"acd-subst-value\">\r\n                    {renderSubstitutedProp(this.app, AppProperty.WINEXE)}\r\n                </span>\r\n            </div>\r\n        </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    this.app = this.props.app;\r\n    this.appIcon = this.app[AppProperty.ICON]\r\n        || Platform.filter(p => p.type === this.app[AppProperty.TYPE])[0].svg;\r\n\r\n    const appType = this.app[AppProperty.TYPE];\r\n    const isWindows = (appType === PlatformName.WINDOWS);\r\n    const isWeb = (appType === PlatformName.WEB);\r\n    return (\r\n        <>\r\n            <div className=\"acd\" ref={el => this.appDetails = el}>\r\n                <div ref={el => this.appVerdict = el} className=\"acd-verdict\" />\r\n                <div className=\"acd-content\">\r\n                    <span>\r\n                        {appType === PlatformName.ANDROID && this.renderAndroidDetails()}\r\n                        {appType === PlatformName.IOS && this.renderIosDetails()}\r\n                        {isWeb && this.renderWebDetails()}\r\n                        {isWindows && this.renderWindowsDetails()}\r\n\r\n                        <div className=\"acd-separator\" />\r\n                        <div className=\"acd-label\">{i18n.t('appdetails.description')}</div>\r\n                        <span className=\"acd-description\">{this.app[AppProperty.DESCRIPTION] || NA}</span>\r\n\r\n                        {isWindows && \r\n                            <>\r\n                                <div className=\"acd-separator\" />\r\n                                <div className=\"acd-label\">{i18n.t('appdetails.args')}</div>\r\n                                <span className=\"acd-subst-value\">\r\n                                    {renderSubstitutedProp(this.app, AppProperty.WINARGS, SubstName.SUBSTITUTERP1) || NA}\r\n                                </span>\r\n                                \r\n                                <div className=\"acd-separator\" />\r\n                                <div className=\"acd-label\">{i18n.t('appdetails.working-dir')}</div>\r\n                                <span className=\"acd-subst-value\">\r\n                                    {renderSubstitutedProp(this.app, AppProperty.WINDIR, SubstName.SUBSTITUTERP2) || NA}\r\n                                </span>\r\n                            </>\r\n                        }\r\n                    </span>\r\n\r\n                    <span ref={el => this.associatedTests = el}>\r\n                        <AppTests\r\n                            key={GetUUID()}\r\n                            appId={this.app[AppProperty.ID]}\r\n                            appVersion={this.app[AppProperty.INTERNALVERSION]}\r\n                            workspace={this.props.workspace}\r\n                        />\r\n                    </span>\r\n                </div>\r\n            </div>\r\n\r\n            {Debug &&\r\n                <div className=\"acd-debug\">\r\n                    <ToggleButton\r\n                        className=\"p-button-secondary\"\r\n                        onLabel=\"- Show less\"\r\n                        offLabel=\"+ Show more\"\r\n                        checked={this.state.showAllDebugProps}\r\n                        onChange={(e) => this.setState({showAllDebugProps: e.value})} />\r\n                    <div dangerouslySetInnerHTML={{ __html: getPrettyJSON(this.app, true, !this.state.showAllDebugProps) }} />\r\n                </div>\r\n            }\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppDetails;\r\n","import i18n from '../i18n';\r\nimport { HomeApp } from '../utils/Constants';\r\n\r\nconst ValidatorErrorMsg ={\r\n    ILLEGAL_CHARACTER: i18n.t('validator.illegal-char'),\r\n    ILLEGAL_FORMAT: i18n.t('validator.illegal-format'),\r\n    URL_INVALID: i18n.t('validator.url-invalid'),\r\n    URL_PROTOCOL_MISSING: i18n.t('validator.url-protocol-missing'),\r\n    URL_DOMAIN_INCORRECT: i18n.t('validator.url-domain-incorrect'),\r\n    WIN_SUFFIX_MISSING: i18n.t('validator.win-suffix-missing'),\r\n    WIN_DRIVE_MISSING: i18n.t('validator.win-drive-missing'),\r\n    WIN_PATH_MISSING: i18n.t('validator.win-path-missing'),\r\n    WIN_EXT_MISSING: i18n.t('validator.win-ext-missing')\r\n};\r\n\r\nexport function isWebURL(str) {\r\n    let ret = { result: true, error: '' };\r\n    const pattern = new RegExp('^(https?:\\\\/\\\\/)+','i');\r\n\r\n    if (!pattern.test(str)) {\r\n        ret.result = false;\r\n        ret.error = ValidatorErrorMsg.URL_PROTOCOL_MISSING;\r\n    }\r\n    else {\r\n        try {\r\n            if (!new RegExp('^(.+\\\\.)+.{2,}|localhost', 'i').test(new URL(str).hostname)) {\r\n                ret.result = false;\r\n                ret.error = ValidatorErrorMsg.URL_DOMAIN_INCORRECT;\r\n            }\r\n        }\r\n        catch(e) {\r\n            ret.result = false;\r\n            ret.error = ValidatorErrorMsg.URL_INVALID;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\n\r\nexport function isAndroidPackage(str) {\r\n    let ret = { result: true, error: '' };\r\n\r\n    if (str === HomeApp) return ret;\r\n\r\n    const pattern = new RegExp('^[a-z][a-z0-9_-]*(\\\\.[a-z0-9_-]+)+[0-9a-z_-]$','i');\r\n\r\n    if (!pattern.test(str)) {\r\n        ret.result = false;\r\n        ret.error = ValidatorErrorMsg.ILLEGAL_CHARACTER; // default\r\n        \r\n\t\tif (!new RegExp('^(?!\\\\.).*(\\\\..+)+(?!\\\\.).$','i').test(str)) {\r\n            ret.error = ValidatorErrorMsg.ILLEGAL_FORMAT;\r\n\t\t}\r\n\t}\r\n    return ret;\r\n}\r\n\r\nexport function isAndroidActivity(str) {\r\n    return isAndroidPackage(str);\r\n}\r\n\r\nexport function isIosBundleId(str) {\r\n    return isAndroidPackage(str);\r\n}\r\n\r\nexport function isWindowsId(str) {\r\n    let ret = { result: true, error: '' };\r\n    const pattern = new RegExp('^(.+)!(.+)$','i');\r\n\r\n    if (!pattern.test(str)) {\r\n        ret.result = false;\r\n        ret.error = ValidatorErrorMsg.ILLEGAL_FORMAT; // default\r\n\t}\r\n    return ret;\r\n}\r\n\r\nexport function isWindowsPath(str) {\r\n    let ret = { result: true, error: '' };\r\n    const pattern = new RegExp('^[a-zA-Z]:\\\\\\\\(((?![<>:\"/\\\\\\\\|?*]).)+((?<![ .])\\\\\\\\)?)+(\\\\..+)$', 'i');\r\n\r\n    if (!pattern.test(str)) {\r\n        ret.result = false;\r\n        ret.error = ValidatorErrorMsg.ILLEGAL_CHARACTER; // default\r\n        \r\n\t\tif (!new RegExp('^[a-zA-Z]:\\\\\\\\','i').test(str)) {\r\n            ret.error = ValidatorErrorMsg.WIN_DRIVE_MISSING;\r\n        }\r\n        else {\r\n            if (!new RegExp('^[a-zA-Z]:\\\\\\\\.+','i').test(str)) {\r\n                ret.error = ValidatorErrorMsg.WIN_PATH_MISSING;\r\n            }\r\n            else if(!new RegExp('(\\\\..+)$','i').test(str)) {\r\n                ret.error = ValidatorErrorMsg.WIN_EXT_MISSING;\r\n            }\r\n        }\r\n\t}\r\n    return ret;\r\n}\r\n","export function getWebIcon(url) {\r\n  const iconSize = 48;\r\n  const prefixUrl = 'https://s2.googleusercontent.com/s2/favicons?sz=' + iconSize + '&domain_url=';\r\n  let domainUrl = url;\r\n  try {\r\n    const urlObject = new URL(url);\r\n    domainUrl = urlObject.origin + urlObject.pathname;\r\n  }\r\n  catch(exception) {}\r\n\r\n  return new Promise((resolve, reject) => {\r\n    var img = new Image()\r\n    img.onload = () => {\r\n      // In case there is no associated icon, the returned image is 16*16\r\n      (img.naturalWidth === 16 && img.naturalHeight === 16) ? reject() : resolve(img.src)\r\n    };\r\n    img.onerror = () => reject();\r\n    img.src = prefixUrl + domainUrl\r\n  });\r\n}\r\n\r\nexport function getScaledIcon(img, w, h) {\r\n  let dataURL = img.currentSrc;\r\n\r\n  if (dataURL) {\r\n    //if (img.naturalWidth > img.width\r\n    //   || img.naturalHeight > img.height) {\r\n          // Compressing image\r\n          var canvas = document.createElement(\"canvas\");\r\n          var ctx = canvas.getContext(\"2d\");\r\n          // Default size: 48*48\r\n          canvas.width = w || 48;\r\n          canvas.height = h || 48;\r\n          ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\r\n          dataURL = canvas.toDataURL();\r\n    // }\r\n  }\r\n\r\n  return dataURL;\r\n}\r\n","import React, { Component } from 'react';\r\nimport './AppIconSelector.scss';\r\nimport { Platform } from './Constants';\r\nimport { getScaledIcon } from './AppIconUtils';\r\n\r\nexport class AppIconSelector extends Component {\r\n\r\n  constructor() {\r\n      super();\r\n      this.inputIconFile = null;\r\n  }\r\n\r\n  getIcon() {\r\n    let defaultIcon = Platform.filter(p => p.type === this.props.platform)[0].svg;\r\n    return this.props.icon || defaultIcon;\r\n  }\r\n\r\n  onClick = e => {\r\n    if (e.keyCode && e.keyCode !== 13) return;\r\n    this.inputIconFile.value = '';\r\n    this.inputIconFile.click();\r\n  }\r\n\r\n  onClickBadge = e => {\r\n    if (e.keyCode && e.keyCode !== 13) return;\r\n    if (this.props.isSelected) {\r\n      e.stopPropagation();\r\n      this.props.onRemove();\r\n    }\r\n  }\r\n\r\n  onSelectIcon = (file) => {\r\n    var fr = new FileReader();\r\n    fr.readAsDataURL(file);\r\n\r\n    fr.onload = function () {\r\n      let img = new Image();\r\n      img.onload = (e) => {\r\n        this.props.onSelect(getScaledIcon(e.currentTarget));\r\n      }\r\n      img.src = fr.result;\r\n    }.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <span\r\n          className=\"ais\"\r\n          tabIndex=\"0\"\r\n          onClick={e => this.onClick(e)}\r\n          onKeyDown={e => this.onClick(e)}>\r\n            <input\r\n                ref={el => this.inputIconFile = el}\r\n                type=\"file\"\r\n                accept=\".png,.jpg,.jpeg,.gif,.bmp,.svg\"\r\n                onChange={(e) => this.onSelectIcon(e.currentTarget.files[0])}\r\n            />\r\n            <img src={this.getIcon()} alt='' />\r\n            <span\r\n              className={'ais-badge' + (this.props.isSelected ? ' selected' : '')}\r\n              tabIndex=\"0\"\r\n              onClick={e => this.onClickBadge(e)}\r\n              onKeyDown={e => this.onClickBadge(e)}>\r\n                <span className={this.props.isSelected ? 'selected' : ''} />\r\n            </span>\r\n        </span>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppIconSelector;\r\n","import React, { Component } from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { AppProperty, PlatformName } from '../utils/Constants';\r\nimport { isWebURL } from '../utils/Validator';\r\nimport { AppIconSelector } from '../utils/AppIconSelector';\r\nimport { getWebIcon } from '../utils/AppIconUtils';\r\nimport i18n from '../i18n';\r\n\r\nexport class AppFormWeb extends Component {\r\n  constructor() {\r\n      super();\r\n      this.state = {\r\n        isValidURL: null\r\n      };\r\n      this.validationTimeout = null;\r\n      this.inputIconFile = null;\r\n  }\r\n\r\n  suggestAppProps = e => {\r\n    this.validateURL();\r\n    if (!this.props.appProperties[AppProperty.NAME]) {\r\n      try {\r\n          const url = new URL(e.target.value);\r\n          this.props.setAppProperty(AppProperty.NAME, url.hostname);\r\n      }\r\n      catch(exception) {\r\n        console.log('URL is malformed');\r\n      }\r\n    }\r\n  }\r\n\r\n  validateURL = timeout => {\r\n    const value = this.props.appProperties[AppProperty.URL];\r\n    window.clearTimeout(this.validationTimeout);\r\n    this.props.onValidation(false);\r\n    this.setState({ isValidURL: null });\r\n    if (!value) {\r\n      this.resetIcon();\r\n      return;\r\n    }\r\n\r\n    this.validationTimeout = window.setTimeout(() => {\r\n      const isValidURL = isWebURL(value);\r\n      this.setState({ isValidURL });\r\n      this.props.onValidation(isValidURL.result);\r\n      \r\n      if (this.props.appProperties[AppProperty.ICON].startsWith('data:image')) return;\r\n\r\n      // Update app icon\r\n      if (isValidURL.result) {\r\n        getWebIcon(value).then(iconUrl => {\r\n          this.props.setAppProperty(AppProperty.ICON, iconUrl);\r\n        })\r\n        .catch(() => {\r\n          this.resetIcon();\r\n        });\r\n      }\r\n      else {\r\n        this.resetIcon();\r\n      }\r\n    }, timeout || 0);\r\n  }\r\n\r\n  /*\r\n   * App Icon\r\n  */\r\n  resetIcon() {\r\n    if (!this.isSelectedIcon()\r\n        && this.props.appProperties[AppProperty.ICON]) {\r\n      this.props.setAppProperty(AppProperty.ICON, '');\r\n    }\r\n  }\r\n\r\n  isSelectedIcon() {\r\n    return this.props.appProperties[AppProperty.ICON].startsWith('data:image');\r\n  }\r\n\r\n  onRemoveIcon = () => {\r\n    this.props.setAppProperty(AppProperty.ICON, '');\r\n    this.validateURL();\r\n  }\r\n\r\n  onSelectIcon = (dataURL) => {\r\n    this.props.setAppProperty(AppProperty.ICON, dataURL);\r\n  }\r\n\r\n  render() {\r\n    let lblClassName = 'ac-dlg-label ac-required';\r\n    let errorMsg = '';\r\n    if (this.state.isValidURL !== null) {\r\n      lblClassName += (this.state.isValidURL.result) ? ' ac-valid-input' : ' ac-invalid-input';\r\n      errorMsg = this.state.isValidURL.error;\r\n    }\r\n    return (\r\n        <>\r\n            <label className={lblClassName} htmlFor={AppProperty.URL}>\r\n                <div>{i18n.t('appdetails.url')}</div>\r\n                <span>\r\n                  <InputText\r\n                      value={this.props.appProperties[AppProperty.URL]}\r\n                      name={AppProperty.URL}\r\n                      className=\"ac-focus\"\r\n                      placeholder=\"https://www.hcl.com\"\r\n                      onChange={e => {this.props.onValueChange(e); this.validateURL(1000)}}\r\n                      onFocus={this.validateURL}\r\n                      onBlur={this.suggestAppProps}\r\n                      autoComplete=\"off\"\r\n                  />\r\n\r\n                  <AppIconSelector\r\n                    platform={PlatformName.WEB}\r\n                    icon={this.props.appProperties[AppProperty.ICON]}\r\n                    isSelected={this.isSelectedIcon()}\r\n                    onSelect={this.onSelectIcon}\r\n                    onRemove={this.onRemoveIcon}\r\n                  />\r\n                </span>\r\n            </label>\r\n            <span className=\"ac-invalid-input-msg\">{errorMsg}</span>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppFormWeb;\r\n","import React, { Component } from 'react';\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { AriaType, setAriaProps } from './AriaUtils';\r\n\r\nexport class AccessibleDropdown extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n          valueSubmitted: null\r\n        };\r\n        this.dropdown = null;    \r\n    }\r\n\r\n  componentDidUpdate() {\r\n    setAriaProps(AriaType.DROPDOWN, '.act-dropdown');\r\n    if (this.dropdown) {\r\n        this.dropdown.container.addEventListener('keydown', this.onKeyDown, false);\r\n    }\r\n  }\r\n\r\n  onKeyDown = (e) => {\r\n    if (e.keyCode === 9 || e.keyCode === 13) {\r\n      if (this.state.valueSubmitted !== this.props.value) {\r\n        this.props.onSubmit(this.props.value);\r\n        this.setState({ valueSubmitted: this.props.value });\r\n      }\r\n    }\r\n\r\n\r\n    if (this.dropdown.filterInput) {\r\n      if (e.keyCode === 32) {\r\n        // Give focus to the filter input if any\r\n        window.setTimeout(() => {\r\n          this.dropdown.filterInput.focus();\r\n        }, 0);\r\n      }\r\n\r\n      if (e.keyCode === 9) {\r\n        // Give focus to the next input element\r\n        window.setTimeout(() => {\r\n          let filterInputFound = false;\r\n          document.querySelectorAll('input').forEach(input => {\r\n            if (filterInputFound) input.focus();\r\n            filterInputFound = (input === this.dropdown.filterInput);\r\n          });\r\n        }, 0);\r\n      }\r\n    }\r\n  }\r\n\r\n  onChange = (e) => {\r\n    this.props.onChange(e.value);\r\n    if (e.originalEvent.keyCode) return;\r\n\r\n    this.props.onSubmit(e.value);\r\n    this.setState({ valueSubmitted: e.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Dropdown\r\n            ref={el => this.dropdown = el}\r\n            value={this.props.value}\r\n            options={this.props.options}\r\n            className=\"act-dropdown\"\r\n            ariaLabel={this.props.ariaLabel}\r\n            placeholder={this.props.placeholder}\r\n            filter={this.props.filter}\r\n            filterPlaceholder={this.props.filterPlaceholder}\r\n            disabled={this.props.disabled}\r\n            onChange={(e) => this.onChange(e)}\r\n            />\r\n    );\r\n  }\r\n}\r\n\r\nexport default AccessibleDropdown;","import { AppProperty } from './Constants';\r\n\r\nexport function getAndroidProps(data) {\r\n    let name = data.package;\r\n    try {\r\n        name = data.application.label[0].replaceAll(String.fromCharCode(0), '');\r\n    }\r\n    catch(e) {\r\n        console.log('Application name could not be extracted.');\r\n    }\r\n    \r\n    let activity = data.application.launcherActivities[0].name.replace(/^\\./,'');\r\n    if (!activity.includes('.')) {\r\n        activity = data.package + '.' + activity;\r\n    }\r\n\r\n    return {\r\n        [AppProperty.PACKAGE]: data.package,\r\n        [AppProperty.ACTIVITY]: activity,\r\n        [AppProperty.NAME]: name,\r\n        [AppProperty.VERSION]: data.versionName || '',\r\n        [AppProperty.ICON]: data.icon\r\n    }\r\n}\r\n\r\nexport function getiOSProps(data) {\r\n    return {\r\n        [AppProperty.BUNDLE]: data.CFBundleIdentifier,\r\n        [AppProperty.NAME]: data.CFBundleName,\r\n        [AppProperty.VERSION]: data.CFBundleShortVersionString || '',\r\n        [AppProperty.ICON]: data.icon\r\n    }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/drop.5533d216.svg\";","import React, { Component } from 'react';\r\nimport './AppFileSelector.scss';\r\nimport AppInfoParser from 'app-info-parser';\r\nimport { getAndroidProps, getiOSProps } from './AppInfoParserUtils';\r\nimport Tooltip from './Tooltip';\r\nimport i18n from '../i18n';\r\nimport { PlatformName, AppProperty, Debug } from './Constants';\r\nimport { getScaledIcon } from './AppIconUtils';\r\nimport SVG_Drop from '../resources/icons/drop.svg';\r\nimport SVG_Android from '../resources/icons/android.svg';\r\nimport SVG_Ios from '../resources/icons/ios.svg';\r\n\r\nconst pbThreshold = 150;\r\nexport class AppFileSelector extends Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = { \r\n            result: null,\r\n            parsing: false,\r\n            dragging: false\r\n        }\r\n        this.isAndroid = (props.platform === PlatformName.ANDROID);\r\n        this.accept = (this.isAndroid) ? \".apk\" : \".ipa\" ;\r\n        this.msg = (this.isAndroid) ? i18n.t('appfileselector.android-msg') : i18n.t('appfileselector.ios-msg');\r\n        this.inputFile = null;\r\n        this.pbTimeout = null;\r\n        this.dragEnterCounter = 0;\r\n    }\r\n    \r\n    componentDidMount() {\r\n        const result = this.props.appProperties;\r\n        this.setState({result});\r\n    }\r\n\r\n    startProgressBar() {\r\n        this.pbTimeout = window.setTimeout(() => {\r\n            this.setState({ parsing: true })}\r\n            , pbThreshold);\r\n\r\n    }\r\n\r\n    parse(file) {\r\n        let result = null;\r\n        let errorMsg = '';\r\n        this.props.onSelection(result, errorMsg); // reset\r\n\r\n        if (!file || !file.name.endsWith(this.accept)) {\r\n            this.setState({result});\r\n            this.props.onSelection(result, i18n.t('appform.error-parser-format'));\r\n            return;\r\n        }\r\n\r\n        // Display a progress bar after a few ms and for at least 1s.\r\n        const startTime = Date.now();\r\n        this.pbTimeout = window.setTimeout(() =>\r\n            this.setState({ parsing: true }), pbThreshold);\r\n\r\n        const parser = new AppInfoParser(file);\r\n        parser.parse().then(data => {\r\n            if (Debug) console.log(data);\r\n            \r\n            result = (this.isAndroid)\r\n                ? getAndroidProps(data) \r\n                : getiOSProps(data);\r\n            result[AppProperty.FILE] = file.name;\r\n        })\r\n        .catch(e => {\r\n            errorMsg = i18n.t('appform.error-parser');\r\n            console.log(errorMsg + ': ' + e);\r\n        })\r\n        .finally(() => {\r\n            const parsingTime = Date.now() - startTime;\r\n            window.clearTimeout(this.pbTimeout);\r\n            window.setTimeout(() => {\r\n                    this.props.onSelection(result, errorMsg);\r\n                    this.setState({ result, parsing: false });\r\n                }, (parsingTime > pbThreshold) ? 1000 + pbThreshold - parsingTime : 0);\r\n        });\r\n    }\r\n\r\n    onDrag = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    onDragEnter = () => {\r\n        this.dragEnterCounter++;\r\n        this.setState({ dragging: true });\r\n    }\r\n\r\n    onDragLeave = () => {\r\n        this.dragEnterCounter--;\r\n        if (this.dragEnterCounter === 0) this.setState({ dragging: false });\r\n    }\r\n    \r\n    onDrop = (e) => {\r\n        this.dragEnterCounter = 0;\r\n        this.setState({ dragging: false });\r\n        this.parse(e.dataTransfer.files[0]);\r\n        e.preventDefault();\r\n    }\r\n\r\n    onInputFileClick = (e) => {\r\n        if (e.keyCode && e.keyCode !== 13) return;\r\n        this.inputFile.value = '';\r\n        this.inputFile.click();\r\n    }\r\n\r\n    onCancel = (e) => {\r\n        if (e.keyCode && e.keyCode !== 13) return;\r\n        this.props.onSelection(null);\r\n        this.props.onIconLoad(null);\r\n        this.setState({ result: null });\r\n        e.stopPropagation();\r\n    }\r\n\r\n    onIconLoad = (e) => {\r\n        const dataURL = getScaledIcon(e.currentTarget);\r\n        this.props.onIconLoad(dataURL ? dataURL : '');\r\n    }\r\n\r\n    render() {\r\n        const parsingClassName = (this.state.parsing) ? ' as-parsing' : '';\r\n        const draggingClassName = (this.state.dragging) ? ' as-dragging' : '';\r\n        return (\r\n            <div className=\"as\">\r\n                <input\r\n                    ref={el => this.inputFile = el}\r\n                    type=\"file\"\r\n                    accept={this.accept}\r\n                    onChange={(e) => this.parse(e.currentTarget.files[0])} />\r\n                <div className={'as-drop-area' + parsingClassName + draggingClassName}\r\n                    tabIndex=\"0\"\r\n                    onDrop={e => this.onDrop(e)}\r\n                    onDragOver={e => this.onDrag(e)}\r\n                    onDragEnter={this.onDragEnter}\r\n                    onDragLeave={this.onDragLeave}\r\n                    onClick={e => this.onInputFileClick(e)}\r\n                    onKeyDown={e => this.onInputFileClick(e)}>\r\n\r\n                    {this.state.parsing\r\n                        ? <div className=\"as-parsing-icon\" />\r\n                        : this.state.result && this.state.result[AppProperty.FILE] ?\r\n                            <>\r\n                                {this.state.result[AppProperty.ICON] ?\r\n                                    <img src={this.state.result[AppProperty.ICON]} alt='' onLoad={e => this.onIconLoad(e)}/> :\r\n                                    this.isAndroid\r\n                                        ? <img src={SVG_Android} alt='' onLoad={e => this.onIconLoad(e)} />\r\n                                        : <img src={SVG_Ios} alt='' onLoad={e => this.onIconLoad(e)} />\r\n                                }\r\n                                \r\n                                <div>\r\n                                    {this.isAndroid\r\n                                        ? <span className=\"as-app-id\">{this.state.result[AppProperty.PACKAGE]}</span>\r\n                                        : <span className=\"as-app-id\">{this.state.result[AppProperty.BUNDLE]}</span>\r\n                                    }\r\n                                </div>\r\n                                \r\n                                <div className=\"as-cancel\">\r\n                                    <Tooltip id=\"cancel\" placement=\"left\" text={i18n.t('appfileselector.clear')} />\r\n                                    <span\r\n                                        id=\"cancel\"\r\n                                        tabIndex=\"0\"\r\n                                        onClick={e => this.onCancel(e)}\r\n                                        onKeyDown={e => this.onCancel(e)} />\r\n                                </div>\r\n                            </>\r\n                            :\r\n                            <>\r\n                                <img src={SVG_Drop} alt='' />\r\n                                <span>{this.msg}</span>\r\n                            </>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppFileSelector;\r\n","export default __webpack_public_path__ + \"static/media/info.0b15cc76.svg\";","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { APIBaseUrl, AndroidType, AndroidTypeName, AppProperty, HomeApp, PlatformName } from '../utils/Constants';\r\nimport { isAndroidPackage, isAndroidActivity } from '../utils/Validator';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { AccessibleDropdown } from '../utils/AccessibleDropdown';\r\nimport AppFileSelector from '../utils/AppFileSelector';\r\nimport { AppIconSelector } from '../utils/AppIconSelector';\r\nimport { AriaType, setAriaProps } from '../utils/AriaUtils';\r\nimport AppInfoParser from 'app-info-parser';\r\nimport { getAndroidProps } from '../utils/AppInfoParserUtils';\r\nimport { getScaledIcon } from '../utils/AppIconUtils';\r\nimport Tooltip from '../utils/Tooltip';\r\nimport SVG_Info from '../resources/icons/info.svg';\r\nimport i18n from '../i18n';\r\n\r\nexport class AppFormAndroid extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            isValidPackage: null,\r\n            isValidActivity: null,\r\n            androidType: AndroidTypeName.MANUAL,\r\n\r\n            devices: [],\r\n            selectedDevice: null,\r\n            devicesRunningTask: false,\r\n\r\n            packages: [],\r\n            selectedPackage: null,\r\n            packagesRunningTask: false,\r\n\r\n            emulatorId: null\r\n        };\r\n        this.validationPkgTimeout = null;\r\n        this.validationActTimeout = null;\r\n\r\n        this.getPackages = this.getPackages.bind(this);\r\n        this.pullApk = this.pullApk.bind(this);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        setAriaProps(AriaType.RADIO, '.act-radiobutton');\r\n    }\r\n    \r\n    componentWillUnmount() {\r\n        axios.delete(APIBaseUrl + '/androidEmu');\r\n    }\r\n\r\n    suggestAppProps = e => {\r\n        this.validatePackage();\r\n        if (isAndroidPackage(e.target.value).result) {\r\n            if (!this.props.appProperties[AppProperty.NAME]) {\r\n                this.props.setAppProperty(AppProperty.NAME, e.target.value);\r\n            }\r\n            if (!this.props.appProperties[AppProperty.ACTIVITY]) {\r\n                const activity = (e.target.value === HomeApp) ? '' : '.MainActivity';\r\n                this.props.setAppProperty(AppProperty.ACTIVITY, e.target.value + activity);\r\n                this.setState({ isValidActivity: {result: true} });\r\n                this.props.onValidation(true);\r\n            }\r\n        }\r\n    }\r\n\r\n    validatePackage = timeout => {\r\n        const value = this.props.appProperties[AppProperty.PACKAGE];\r\n        window.clearTimeout(this.validationPkgTimeout);\r\n        this.props.onValidation(false);\r\n        this.setState({ isValidPackage: null });\r\n        if (!value) return;\r\n\r\n        this.validationPkgTimeout = window.setTimeout(() => {\r\n            const isValidPackage = isAndroidPackage(value);\r\n            this.setState({ isValidPackage });\r\n            const isValidPkgResult = isValidPackage.result;\r\n            const isValidActResult = (this.state.isValidActivity !== null) ? this.state.isValidActivity.result : false;\r\n            this.props.onValidation(isValidPkgResult && isValidActResult);\r\n        }, timeout || 0);\r\n    }\r\n\r\n    validateActivity = timeout => {\r\n        const value = this.props.appProperties[AppProperty.ACTIVITY];\r\n        window.clearTimeout(this.validationActTimeout);\r\n        this.props.onValidation(false);\r\n        this.setState({ isValidActivity: null });\r\n        if (!value) return;\r\n\r\n        this.validationActTimeout = window.setTimeout(() => {\r\n            const isValidActivity = isAndroidActivity(value);\r\n            this.setState({ isValidActivity });\r\n            const isValidPkgResult = (this.state.isValidPackage !== null) ? this.state.isValidPackage.result : false;\r\n            const isValidActResult = isValidActivity.result;\r\n            this.props.onValidation(isValidPkgResult && isValidActResult);\r\n        }, timeout || 0);\r\n    }\r\n\r\n    onAndroidTypeChange = (e) => {\r\n        this.setState({ androidType: e.value });\r\n        this.props.onValidation(false);\r\n\r\n        if (e.value === AndroidTypeName.APK\r\n            && !this.props.appProperties[AppProperty.FILE]) return;\r\n\r\n        if (e.value === AndroidTypeName.DEVICE) {\r\n            if (this.state.devices.length === 0) this.getDevices();\r\n            if (!this.props.appProperties[AppProperty.DEVICE]) return;\r\n        }\r\n\r\n        this.validatePackage();\r\n        this.validateActivity();\r\n    }\r\n\r\n    resetApkForm() {\r\n        this.props.setAppProperty(AppProperty.FILE, null);\r\n    }\r\n\r\n    resetDeviceForm() {\r\n        this.props.setAppProperty(AppProperty.DEVICE, null);\r\n        this.setState({selectedDevice: null, selectedPackage: null, emulatorId: null});\r\n    }\r\n\r\n    /*\r\n    *   From APK\r\n    */\r\n    onApkSelection = (selection, errorMsg) => {\r\n        this.resetDeviceForm();\r\n        if (selection) {\r\n            Object.keys(selection).forEach(k => selection[k] && this.props.setAppProperty(k, selection[k]));\r\n            this.props.onValidation(!!selection[AppProperty.FILE], errorMsg);\r\n        }\r\n        else {\r\n            this.props.setAppProperty(AppProperty.FILE, null);\r\n            this.props.setAppProperty(AppProperty.PACKAGE, '');\r\n            this.props.setAppProperty(AppProperty.ACTIVITY, '');\r\n            this.props.setAppProperty(AppProperty.ICON, null);\r\n            this.props.onValidation(false, errorMsg);\r\n        }\r\n    }\r\n\r\n    onApkIconLoad = (dataURL) => {\r\n        this.props.setAppProperty(AppProperty.ICON, dataURL);\r\n    }\r\n\r\n    onPackageChange = (e) => {\r\n        this.props.onValueChange(e);\r\n        this.validatePackage(1000);\r\n\r\n        // Reset other form types\r\n        this.resetApkForm();\r\n        this.resetDeviceForm();\r\n    }\r\n\r\n    /*\r\n    *   From device\r\n    */\r\n    getDevices() {\r\n        this.setState({ devicesRunningTask: true });\r\n\r\n        const url = APIBaseUrl + \"/androidDevices/\";\r\n        axios.get(url).then((response) => {\r\n            let devices = [];\r\n            response.data.map((d, index) => {\r\n                const deviceType = i18n.t('appformdevice.type.' + d.type.toLowerCase());\r\n                return devices.push({label: deviceType + ':' + d.model, value: index, name: d.name})\r\n            });\r\n            this.setState({ devices });\r\n        })\r\n        .catch(() => {\r\n            console.log('Could not retrieve device list');\r\n        })\r\n        .finally(() => {\r\n            this.setState({ devicesRunningTask: false });\r\n        });\r\n    }\r\n\r\n    onDeviceSelection = (value) => {\r\n        this.setState({ selectedDevice: value, selectedPackage: null, emulatorId: null });\r\n    }\r\n\r\n    getPackages(value) {\r\n        this.setState({ packagesRunningTask: true });\r\n        const deviceId = this.state.devices[value].name;\r\n        const url = APIBaseUrl + \"/androidApps/?deviceId=\" + deviceId + \"&thirdParty=true\";\r\n        axios.get(url).then((response) => {\r\n            let packages = [];\r\n            response.data.packList.sort().map((p, index) => {\r\n                return packages.push({label: p, value: index})\r\n            });\r\n            this.setState({ packages, emulatorId: response.data.emulatorId });\r\n        })\r\n        .catch(() => {\r\n            console.log('Could not retrieve packages list');\r\n        })\r\n        .finally(() => {\r\n            this.setState({ packagesRunningTask: false });\r\n        });\r\n    }\r\n\r\n    onPackageSelection = (value) => {\r\n        this.resetApkForm();\r\n        this.setState({ selectedPackage: value });\r\n        this.props.onValidation(false);\r\n    }\r\n\r\n    pullApk(value) {\r\n        this.setState({ packagesRunningTask: true });\r\n        const url = APIBaseUrl + \"/androidApk/package?emulator=\" + this.state.emulatorId + \"&packName=\" + this.state.packages[value].label;\r\n        // Download APK and extract app details\r\n        axios.get(url, { responseType: 'arraybuffer' }).then((response) => {\r\n            const parser = new AppInfoParser(new File([response.data], 'base.apk'));\r\n            parser.parse().then(data => {\r\n                const apkProps = getAndroidProps(data);\r\n                Object.keys(apkProps).forEach(k => this.props.setAppProperty(k, apkProps[k]));\r\n                this.props.setAppProperty(AppProperty.DEVICE, this.state.selectedDevice);\r\n                this.props.onValidation(true);\r\n            })\r\n            .catch(() => {\r\n                console.log('Could not extract APK details');\r\n                this.props.onValidation(false, i18n.t('appform.error-no-activity'));\r\n            })\r\n            .finally(() => {\r\n                this.setState({ packagesRunningTask: false });\r\n            });\r\n        })\r\n        .catch(() => {\r\n            console.log('Could not retrieve APK');\r\n            this.setState({ packagesRunningTask: false });\r\n        })\r\n    }\r\n\r\n    /*\r\n    *   Render functions\r\n    */\r\n    renderManualType() {\r\n        let lblPkgClassName = 'ac-dlg-label ac-required';\r\n        let pkgErrorMsg = '';\r\n        let actErrorMsg = '';\r\n        if (this.state.isValidPackage !== null) {\r\n            lblPkgClassName += (this.state.isValidPackage.result) ? ' ac-valid-input' : ' ac-invalid-input';\r\n            pkgErrorMsg = this.state.isValidPackage.error;\r\n        }\r\n\r\n        let lblActClassName = 'ac-dlg-label ac-required';\r\n        if (this.state.isValidActivity !== null) {\r\n            lblActClassName += (this.state.isValidActivity.result) ? ' ac-valid-input' : ' ac-invalid-input';\r\n            actErrorMsg = this.state.isValidActivity.error;\r\n        }\r\n        return (\r\n            <>\r\n                <label className={lblPkgClassName} htmlFor={AppProperty.PACKAGE}>\r\n                    <div>{i18n.t('appdetails.package')}</div>\r\n                    <span>\r\n                        <InputText\r\n                            value={this.props.appProperties[AppProperty.PACKAGE]}\r\n                            name={AppProperty.PACKAGE}\r\n                            className=\"ac-focus\"\r\n                            placeholder=\"com.hcl.application\"\r\n                            onChange={e => {this.onPackageChange(e)}}\r\n                            onFocus={() => {this.validatePackage(); this.validateActivity()}}\r\n                            onBlur={this.suggestAppProps}\r\n                            autoComplete=\"off\"\r\n                        />\r\n                        \r\n                        <AppIconSelector\r\n                            platform={PlatformName.ANDROID}\r\n                            icon={this.props.appProperties[AppProperty.ICON]}\r\n                            isSelected={!!this.props.appProperties[AppProperty.ICON]}\r\n                            onSelect={(data) => this.props.setAppProperty(AppProperty.ICON, data)}\r\n                            onRemove={() => this.props.setAppProperty(AppProperty.ICON, '')}\r\n                        />\r\n                    </span>\r\n                </label>\r\n                <span className=\"ac-invalid-input-msg\">{pkgErrorMsg}</span>\r\n                <label className={lblActClassName} htmlFor={AppProperty.ACTIVITY}>\r\n                    <div>{i18n.t('appdetails.activity')}</div>\r\n                    <InputText\r\n                        value={this.props.appProperties[AppProperty.ACTIVITY]}\r\n                        name={AppProperty.ACTIVITY}\r\n                        placeholder=\"com.hcl.application.MainActivity\"\r\n                        onChange={e => {this.props.onValueChange(e); this.validateActivity(1000)}}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    {/*<span />icon*/}\r\n                </label>\r\n                <span className=\"ac-invalid-input-msg\">{actErrorMsg}</span>\r\n            </>\r\n        );\r\n    }\r\n\r\n    renderApkType() {\r\n        return (\r\n            <AppFileSelector \r\n                platform={PlatformName.ANDROID}\r\n                onSelection={this.onApkSelection}\r\n                onIconLoad={this.onApkIconLoad}\r\n                appProperties={this.props.appProperties}\r\n            />\r\n        );\r\n    }\r\n\r\n    renderDeviceType() {\r\n        const icon = this.props.appProperties[AppProperty.ICON];\r\n        const isSelectedDevice = (this.state.selectedDevice !== null);\r\n        const lblPkgClassName = (isSelectedDevice) ? '' : ' disabled';\r\n        return (\r\n            <>\r\n                <label className=\"ac-dlg-label ac-required\" htmlFor={AppProperty.DEVICE}>\r\n                    <div>{i18n.t('appformdevice.device')}</div>\r\n                    {this.state.devicesRunningTask && <span className=\"ac-dropdown-badge running\"/>}\r\n                </label>\r\n                <AccessibleDropdown\r\n                    value={this.state.selectedDevice}\r\n                    options={this.state.devices}\r\n                    ariaLabel={i18n.t('appformdevice.device')}\r\n                    placeholder={(this.state.devices.length !== 0) ? i18n.t('appformdevice.device-ph') : ''}\r\n                    disabled={this.state.devicesRunningTask}\r\n                    onChange={this.onDeviceSelection}\r\n                    onSubmit={this.getPackages}\r\n                    />\r\n                <label className={'ac-dlg-label ac-required' + lblPkgClassName} htmlFor={AppProperty.PACKAGE}>\r\n                    <div>{i18n.t('appformdevice.package')}</div>\r\n                    {this.state.packagesRunningTask ?\r\n                        <span className=\"ac-dropdown-badge running\"/> :\r\n                        (typeof this.props.appProperties[AppProperty.DEVICE] === 'number' && icon) &&\r\n                            <img className=\"ac-dropdown-badge\"\r\n                                src={icon}\r\n                                alt=''\r\n                                onLoad={e => this.props.setAppProperty(AppProperty.ICON, getScaledIcon(e.currentTarget))}\r\n                                onError={() => this.props.setAppProperty(AppProperty.ICON, null)} />\r\n                    }\r\n                </label>\r\n                {!isSelectedDevice &&\r\n                    <>\r\n                        <Tooltip id={'_lbl_tooltip'} placement='right' text={i18n.t('appformdevice.package-tooltip')} />\r\n                        <img id={'_lbl_tooltip'} className='ac-dlg-tooltip' src={SVG_Info} alt='' />\r\n                    </>\r\n                }\r\n                <AccessibleDropdown\r\n                    value={this.state.selectedPackage}\r\n                    options={this.state.packages}\r\n                    ariaLabel={i18n.t('appformdevice.package')}\r\n                    placeholder={(this.state.packages.length !== 0) ? i18n.t('appformdevice.package-ph') : ''}\r\n                    filter\r\n                    filterPlaceholder={i18n.t('appformdevice.package-filter-ph')}\r\n                    disabled={!isSelectedDevice || this.state.packagesRunningTask}\r\n                    onChange={this.onPackageSelection}\r\n                    onSubmit={this.pullApk}\r\n                    />\r\n            </>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"act-radiogroup\">\r\n                    {AndroidType.map(at => {\r\n                        return (\r\n                            <span key={at.type} className=\"act-radiobutton\">\r\n                                <RadioButton\r\n                                    value={at.type}\r\n                                    inputId={at.type}\r\n                                    onChange={this.onAndroidTypeChange}\r\n                                    checked={this.state.androidType === at.type}\r\n                                />\r\n                                <label id={'_' + at.type} htmlFor={at.type}>{at.label}</label>\r\n                            </span>\r\n                        )}\r\n                    )}\r\n                </div>\r\n\r\n                {this.state.androidType === AndroidTypeName.MANUAL && this.renderManualType()}\r\n                {this.state.androidType === AndroidTypeName.APK && this.renderApkType()}\r\n                {this.state.androidType === AndroidTypeName.DEVICE && this.renderDeviceType()}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppFormAndroid;\r\n","import React, { Component } from 'react';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { AppProperty, PlatformName, IOSType, IOSTypeName } from '../utils/Constants';\r\nimport { isIosBundleId } from '../utils/Validator';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport AppFileSelector from '../utils/AppFileSelector';\r\nimport { AppIconSelector } from '../utils/AppIconSelector';\r\nimport { AriaType, setAriaProps } from '../utils/AriaUtils';\r\nimport i18n from '../i18n';\r\n\r\nexport class AppFormIos extends Component {\r\n  constructor() {\r\n      super();\r\n      this.state = {\r\n        isValidBundleId: null,\r\n        iOSType: IOSTypeName.MANUAL\r\n      };\r\n      this.validationTimeout = null;\r\n  }\r\n  \r\n  componentDidUpdate() {\r\n    setAriaProps(AriaType.RADIO, '.act-radiobutton');\r\n  }\r\n\r\n  suggestAppProps = e => {\r\n    this.validateBundleId();\r\n    if (!this.props.appProperties[AppProperty.NAME] && isIosBundleId(e.target.value).result) {\r\n        this.props.setAppProperty(AppProperty.NAME, e.target.value);\r\n    }\r\n  }\r\n\r\n  validateBundleId = timeout => {\r\n    const value = this.props.appProperties[AppProperty.BUNDLE];\r\n    window.clearTimeout(this.validationTimeout);\r\n    this.props.onValidation(false);\r\n    this.setState({ isValidBundleId: null });\r\n    if (!value) return;\r\n\r\n    this.validationTimeout = window.setTimeout(() => {\r\n      const isValidBundleId = isIosBundleId(value);\r\n      this.setState({ isValidBundleId });\r\n      this.props.onValidation(isValidBundleId.result);\r\n    }, timeout || 0);\r\n  }\r\n\r\n  resetIpaForm() {\r\n    /*this.props.setAppProperty({\r\n        [AppProperty.FILE]: null,\r\n        [AppProperty.ICON]: null\r\n    });*/\r\n    this.props.setAppProperty(AppProperty.FILE, null);\r\n    // this.props.setAppProperty(AppProperty.ICON, null);\r\n}\r\n\r\n  onIpaSelection = (selection, errorMsg) => {\r\n    if (selection) {\r\n      Object.keys(selection).forEach(k => selection[k] && this.props.setAppProperty(k, selection[k]));\r\n      this.props.onValidation(!!selection[AppProperty.FILE], errorMsg);\r\n    }\r\n    else {\r\n      this.props.setAppProperty(AppProperty.FILE, null);\r\n      this.props.setAppProperty(AppProperty.BUNDLE, '');\r\n      this.props.setAppProperty(AppProperty.ICON, null);\r\n      this.props.onValidation(false, errorMsg);\r\n    }\r\n  }\r\n\r\n  onIpaIconLoad = (dataURL) => {\r\n    this.props.setAppProperty(AppProperty.ICON, dataURL);\r\n  }\r\n\r\n  onIOSTypeChange = (e) => {\r\n    this.setState({ iOSType: e.value });\r\n    \r\n    if (e.value === IOSTypeName.IPA\r\n        && !this.props.appProperties[AppProperty.FILE]) return;\r\n    \r\n    this.validateBundleId();\r\n  }\r\n\r\n  renderIpaType() {\r\n    return (\r\n      <AppFileSelector \r\n        platform={PlatformName.IOS}\r\n        onSelection={this.onIpaSelection}\r\n        onIconLoad={this.onIpaIconLoad}\r\n        appProperties={this.props.appProperties}\r\n      />\r\n    );\r\n  }\r\n\r\n  onBundleIdChange = (e) => {\r\n    this.props.onValueChange(e);\r\n    this.validateBundleId(1000);\r\n    this.resetIpaForm();\r\n  }\r\n\r\n  renderManualType() {\r\n    let lblClassName = 'ac-dlg-label ac-required';\r\n    let errorMsg = '';\r\n    if (this.state.isValidBundleId !== null) {\r\n      lblClassName += (this.state.isValidBundleId.result) ? ' ac-valid-input' : ' ac-invalid-input';\r\n      errorMsg = this.state.isValidBundleId.error;\r\n    }\r\n    return (\r\n      <>\r\n        <label className={lblClassName} htmlFor={AppProperty.BUNDLE}>\r\n          <div>{i18n.t('appdetails.bundle-id')}</div>\r\n          <span>\r\n            <InputText\r\n              value={this.props.appProperties[AppProperty.BUNDLE]}\r\n              name={AppProperty.BUNDLE}\r\n              className=\"ac-focus\"\r\n              placeholder=\"com.hcl.onetest\"\r\n              onChange={e => {this.onBundleIdChange(e)}}\r\n              onFocus={this.validateBundleId}\r\n              onBlur={this.suggestAppProps}\r\n              autoComplete=\"off\"\r\n            />\r\n\r\n            <AppIconSelector\r\n              platform={PlatformName.IOS}\r\n              icon={this.props.appProperties[AppProperty.ICON]}\r\n              isSelected={!!this.props.appProperties[AppProperty.ICON]}\r\n              onSelect={(data) => this.props.setAppProperty(AppProperty.ICON, data)}\r\n              onRemove={() => this.props.setAppProperty(AppProperty.ICON, '')}\r\n            />\r\n          </span>\r\n        </label>\r\n        <span className=\"ac-invalid-input-msg\">{errorMsg}</span>\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"act-radiogroup\">\r\n          {IOSType.map(at => {\r\n            return (\r\n              <span key={at.type} className=\"act-radiobutton\">\r\n                <RadioButton\r\n                  value={at.type}\r\n                  inputId={at.type}\r\n                  onChange={this.onIOSTypeChange}\r\n                  checked={this.state.iOSType === at.type}\r\n                />\r\n                <label id={'_' + at.type} htmlFor={at.type}>{at.label}</label>\r\n              </span>\r\n            )}\r\n          )}\r\n        </div>\r\n\r\n        {this.state.iOSType === IOSTypeName.MANUAL && this.renderManualType()}\r\n        {this.state.iOSType === IOSTypeName.IPA && this.renderIpaType()}\r\n    </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppFormIos;\r\n","import React, { Component } from 'react';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { AppProperty, DesktopTypeName, DesktopType, PlatformName } from '../utils/Constants';\r\nimport { isWindowsId, isWindowsPath } from '../utils/Validator';\r\nimport Tooltip from '../utils/Tooltip';\r\nimport { AppIconSelector } from '../utils/AppIconSelector';\r\nimport { AriaType, setAriaProps } from '../utils/AriaUtils';\r\nimport i18n from '../i18n';\r\n\r\nexport class AppFormDesktop extends Component {\r\n  constructor() {\r\n      super();\r\n      this.state = {\r\n          isValidExe: null,\r\n          appExe: ''\r\n      };\r\n      this.validationTimeout = null;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.setAppProperty(AppProperty.WINTYPE,\r\n      this.props.appProperties[AppProperty.WINTYPE] || DesktopTypeName.EXE);\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    setAriaProps(AriaType.RADIO, '.act-radiobutton');\r\n  }\r\n\r\n  isExePath() {\r\n    return (this.props.appProperties[AppProperty.WINTYPE] === DesktopTypeName.EXE);\r\n  }\r\n\r\n  suggestAppProps = e => {\r\n    this.validateExe();\r\n\r\n    const value = e.target.value;\r\n    const isValidExe = (this.isExePath()) ? isWindowsPath(value).result : isWindowsId(value).result;\r\n\r\n    if (!this.props.appProperties[AppProperty.NAME] && isValidExe) {\r\n      const name = (this.isExePath())\r\n        ? value.substring(value.lastIndexOf('\\\\') + 1, value.lastIndexOf('.'))\r\n        : value.substr(0, value.lastIndexOf('!'));\r\n      this.props.setAppProperty(AppProperty.NAME, name);\r\n    }\r\n  }\r\n\r\n  validateExe = timeout => {\r\n    const value = this.props.appProperties[AppProperty.WINEXE];\r\n    window.clearTimeout(this.validationTimeout);\r\n    this.props.onValidation(false);\r\n    this.setState({ isValidExe: null });\r\n    if (!value) return;\r\n\r\n    this.validationTimeout = window.setTimeout(() => {\r\n      const isValidExe = (this.isExePath()) ? isWindowsPath(value) : isWindowsId(value);\r\n      this.setState({ isValidExe });\r\n      this.props.onValidation(isValidExe.result);\r\n    }, timeout || 0);\r\n  }\r\n\r\n  onDesktopTypeChange = (e) => {\r\n      this.props.setAppProperty(AppProperty.WINEXE, '');\r\n      this.props.setAppProperty(AppProperty.WINTYPE, e.target.value);\r\n      this.validateExe();\r\n  }\r\n\r\n  render() {\r\n    const lbl = (this.isExePath()) ? i18n.t('appdetails.exe-path') : i18n.t('appdetails.win-id');\r\n    let lblClassName = 'ac-dlg-label ac-required';\r\n    let errorMsg = '';\r\n    if (this.state.isValidExe !== null) {\r\n      lblClassName += (this.state.isValidExe.result) ? ' ac-valid-input' : ' ac-invalid-input';\r\n      errorMsg = this.state.isValidExe.error;\r\n    }\r\n    return (\r\n        <>  \r\n            <div className=\"act-radiogroup\">\r\n                {DesktopType.map(dt => {\r\n                    return (\r\n                        <span key={dt.type} className=\"act-radiobutton\">\r\n                            <RadioButton\r\n                                value={dt.type}\r\n                                inputId={dt.type}\r\n                                onChange={this.onDesktopTypeChange}\r\n                                checked={this.props.appProperties[AppProperty.WINTYPE] === dt.type}\r\n                            />\r\n                            <Tooltip id={'_' + dt.type} text={dt.tooltip} />\r\n                            <label id={'_' + dt.type} htmlFor={dt.type}>{dt.label}</label>\r\n                        </span>\r\n                    )}\r\n                )}\r\n            </div>\r\n\r\n            <label className={lblClassName} htmlFor={AppProperty.WINEXE}>\r\n                <div>{lbl}</div>\r\n                <span>\r\n                  <InputText\r\n                      value={this.props.appProperties[AppProperty.WINEXE]}\r\n                      name={AppProperty.WINEXE}\r\n                      className=\"ac-focus\"\r\n                      onChange={e => {this.props.onValueChange(e); this.validateExe(1000)}}\r\n                      onFocus={this.validateExe}\r\n                      onBlur={this.suggestAppProps}\r\n                      autoComplete=\"off\"\r\n                  />\r\n\r\n                  <AppIconSelector\r\n                      platform={PlatformName.WINDOWS}\r\n                      icon={this.props.appProperties[AppProperty.ICON]}\r\n                      isSelected={!!this.props.appProperties[AppProperty.ICON]}\r\n                      onSelect={(data) => this.props.setAppProperty(AppProperty.ICON, data)}\r\n                      onRemove={() => this.props.setAppProperty(AppProperty.ICON, '')}\r\n                  />\r\n                </span>\r\n            </label>\r\n            <span className=\"ac-invalid-input-msg\">{errorMsg}</span>\r\n        </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppFormDesktop;\r\n","import React, { Component } from 'react';\r\nimport '../resources/scss/AppFieldSet.scss';\r\nimport { Fieldset } from 'primereact/fieldset';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { AppProperty } from '../utils/Constants';\r\nimport i18n from '../i18n';\r\n\r\nexport class AppFormAdvancedOptions extends Component {\r\n  constructor() {\r\n      super();\r\n      this.state = {\r\n        panelCollapsed: true\r\n      };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <Fieldset\r\n            legend={i18n.t('appdetails.advanced-options')}\r\n            toggleable\r\n            collapsed={this.state.panelCollapsed}\r\n            onToggle={(e) => this.setState({panelCollapsed: e.value})} >\r\n\r\n            <label className=\"ac-dlg-label\" htmlFor={AppProperty.WINARGS}>\r\n                <div>{i18n.t('appdetails.args')}</div>\r\n                <InputText\r\n                  value={this.props.appProperties[AppProperty.WINARGS]}\r\n                  name={AppProperty.WINARGS}\r\n                  onChange={this.props.onValueChange}\r\n                  autoComplete=\"off\" />\r\n            </label>\r\n\r\n            <label className=\"ac-dlg-label\" htmlFor={AppProperty.WINDIR}>\r\n                <div>{i18n.t('appdetails.working-dir')}</div>\r\n                <InputText\r\n                  value={this.props.appProperties[AppProperty.WINDIR]}\r\n                  name={AppProperty.WINDIR}\r\n                  onChange={this.props.onValueChange}\r\n                  autoComplete=\"off\" />\r\n            </label>\r\n        </Fieldset>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppFormAdvancedOptions;\r\n","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport axios from \"axios\";\r\nimport './AppForm.scss';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { InputTextarea } from 'primereact/inputtextarea';\r\nimport { APIBaseUrl, Platform, PlatformName, AppProperty, MoebServiceUrl } from '../utils/Constants';\r\nimport AppFormWeb from './AppFormWeb';\r\nimport AppFormAndroid from './AppFormAndroid';\r\nimport AppFormIos from './AppFormIos';\r\nimport AppFormDesktop from './AppFormDesktop';\r\nimport AppFormAdvancedOptions from './AppFormAdvancedOptions';\r\nimport { AriaType, setAriaProps } from '../utils/AriaUtils';\r\nimport i18n from '../i18n';\r\n\r\nconst Success = '1';\r\n\r\nexport class AppForm extends Component {\r\n  constructor() {\r\n      super();\r\n      this.state = {\r\n          visible: false,\r\n          appProps: {},\r\n          isSubFormValid: false,\r\n          editMode: false,\r\n          errorMsg: ''\r\n      };\r\n      this.mainInput = null;\r\n      this.dlg = null;\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n      \r\n    if (prevProps.visible !== this.props.visible) {\r\n        this.setState({ visible: this.props.visible, isSubFormValid: false });\r\n\r\n        // Init app properties\r\n        Object.values(AppProperty).forEach(p => {\r\n            (p !== AppProperty.SUBSTITUTERS) && this.setAppProperty(p,\r\n                this.props.appProperties[p] // Edit action\r\n                || '' // Add action\r\n            )\r\n        });\r\n        \r\n        if (this.props.visible) {\r\n            this.setState({ editMode: this.props.appProperties[AppProperty.ID] !== undefined})\r\n            this.setAppProperty(AppProperty.TYPE, this.props.appType);\r\n            this.setState({ errorMsg: '' });\r\n\r\n            // Set focus on the main input\r\n            window.setTimeout(() => {\r\n                const input = this.dlg && ReactDOM.findDOMNode(this.dlg).getElementsByClassName('ac-focus')[0];\r\n                if (input) input.focus();\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    setAriaProps(AriaType.DIALOG, '.ac-dlg');\r\n  }\r\n\r\n  setAppProperty = (name, value) => {\r\n    let appProps = this.state.appProps;\r\n    appProps[name] = value;\r\n    this.setState({ appProps });\r\n  }\r\n\r\n  onValueChange = e => {\r\n    if (this.state.errorMsg !== '') {\r\n      this.setState({ errorMsg: '' });\r\n    }\r\n    \r\n    this.setAppProperty(e.target.name, e.target.value);\r\n  }\r\n\r\n  onValidation = (valid, errorMsg) => {\r\n    this.setState({ isSubFormValid: valid, errorMsg: (errorMsg || '') });\r\n  }\r\n\r\n  canAddApplication() {\r\n    return this.state.isSubFormValid && this.state.appProps[AppProperty.NAME]\r\n      && this.state.errorMsg === '';\r\n  }\r\n\r\n  addApplication = () => {\r\n    const url = APIBaseUrl + \"/application/\";\r\n    axios.post(url, this.state.appProps).then(response => {\r\n      if (response.data.status === Success) {\r\n        this.props.onActionPerformed({appId: response.data[AppProperty.ID], typeFilter: this.props.typeFilter});\r\n      }\r\n      else {\r\n        this.setState({ errorMsg: i18n.t('appform.error-duplicate') });\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(url + ' POST failed');\r\n    });\r\n  }\r\n\r\n  notifyApplicationChange(id) {\r\n    const url = MoebServiceUrl\r\n    + '/com.ibm.rational.test.lt.core.moeb.services.applications.IApplicationService/'\r\n    + '?action=notifyAppChange'\r\n    + '&appuid=' + id;\r\n\r\n    axios.get(url).then(() => {\r\n        console.log('AppChange notification succeeded');\r\n      })\r\n      .catch(() => {\r\n        console.log('AppChange notification failed');\r\n    });\r\n  }\r\n\r\n  editApplication = () => {\r\n    const id = this.state.appProps[AppProperty.ID];\r\n    const url = APIBaseUrl + \"/application/\" + id;\r\n    axios.put(url, this.state.appProps).then(response => {\r\n      if (response.data.status === Success) {\r\n        this.props.onActionPerformed({appId: id, typeFilter: this.props.typeFilter});\r\n        this.notifyApplicationChange(id);\r\n      }\r\n      else {\r\n        this.setState({ errorMsg: i18n.t('appform.error-duplicate') });\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(url + ' PUT failed');\r\n    });\r\n  }\r\n\r\n  onSubmit = (e, handler) => {\r\n    e.preventDefault();\r\n    if (this.canAddApplication()) {\r\n      handler();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const appType = this.props.appType;\r\n    const plaformData = (appType) ? Platform.filter(p => p.type === appType)[0] : null;\r\n\r\n    const header = (\r\n        plaformData && <div className=\"ac-dlg-header\">\r\n            <img alt='' src={plaformData.svgtype} />\r\n            {(this.state.editMode) ? plaformData.dlgEditTitle : plaformData.dlgAddTitle}\r\n        </div>\r\n    );\r\n\r\n    const okLbl = (this.state.editMode) ? i18n.t('appform.save') : i18n.t('appform.add');\r\n    const okHandler = (this.state.editMode) ? this.editApplication : this.addApplication;\r\n    const footer = (\r\n        <div>\r\n            <Button label={i18n.t('appform.cancel')} className=\"p-button-secondary\" onClick={this.props.onHide} />\r\n            <Button label={okLbl} disabled={!this.canAddApplication()} onClick={okHandler} />\r\n        </div>\r\n    );\r\n\r\n    const errorClassName = (this.state.errorMsg !== '') ? ' visible' : '';\r\n\r\n    return (\r\n        <Dialog\r\n          ref={el => this.dlg = el}\r\n          header={header}\r\n          footer={footer}\r\n          className=\"ac-dlg\"\r\n          appendTo={document.body}\r\n          visible={this.state.visible}\r\n          closable={true}\r\n          onHide={this.props.onHide}\r\n          focusOnShow={false}\r\n          >\r\n\r\n          <div className={'ac-error' + errorClassName}>\r\n            <span />{/*icon*/}\r\n            {this.state.errorMsg}\r\n          </div>\r\n\r\n          <form spellCheck={false} onSubmit={e => this.onSubmit(e, okHandler)}>\r\n            {appType === PlatformName.ANDROID &&\r\n                <AppFormAndroid\r\n                    appProperties={this.state.appProps}\r\n                    onValueChange={this.onValueChange}\r\n                    onValidation={this.onValidation}\r\n                    setAppProperty={this.setAppProperty} />\r\n            }\r\n            {appType === PlatformName.IOS && \r\n                <AppFormIos\r\n                    appProperties={this.state.appProps}\r\n                    onValueChange={this.onValueChange}\r\n                    onValidation={this.onValidation}\r\n                    setAppProperty={this.setAppProperty} />\r\n            }\r\n            {appType === PlatformName.WEB && \r\n                <AppFormWeb\r\n                    appProperties={this.state.appProps}\r\n                    onValueChange={this.onValueChange}\r\n                    onValidation={this.onValidation}\r\n                    setAppProperty={this.setAppProperty} />\r\n            }\r\n            {appType === PlatformName.WINDOWS && \r\n                <AppFormDesktop\r\n                    appProperties={this.state.appProps}\r\n                    onValueChange={this.onValueChange}\r\n                    onValidation={this.onValidation}\r\n                    setAppProperty={this.setAppProperty} />\r\n            }\r\n\r\n            <label className=\"ac-dlg-label ac-required\" htmlFor={AppProperty.NAME}>\r\n                <div>{i18n.t('appdetails.name')}</div>\r\n                <InputText\r\n                    value={this.state.appProps[AppProperty.NAME]}\r\n                    name={AppProperty.NAME}\r\n                    onChange={this.onValueChange}\r\n                    autoComplete=\"off\" />\r\n            </label>\r\n\r\n            <label className=\"ac-dlg-label\" htmlFor={AppProperty.VERSION}>\r\n                <div>{i18n.t('appdetails.version')}</div>\r\n                <InputText\r\n                    value={this.state.appProps[AppProperty.VERSION]}\r\n                    name={AppProperty.VERSION}\r\n                    onChange={this.onValueChange}\r\n                    autoComplete=\"off\" />\r\n            </label>\r\n\r\n            <label className=\"ac-dlg-label\" htmlFor={AppProperty.DESCRIPTION}>\r\n                <div>{i18n.t('appdetails.description')}</div>\r\n                <InputTextarea\r\n                    value={this.state.appProps[AppProperty.DESCRIPTION]}\r\n                    name={AppProperty.DESCRIPTION}\r\n                    onChange={this.onValueChange} />\r\n            </label>\r\n\r\n            {appType === PlatformName.WINDOWS && \r\n                <AppFormAdvancedOptions\r\n                    appProperties={this.state.appProps}\r\n                    onValueChange={this.onValueChange}\r\n                    setAppProperty={this.setAppProperty} />\r\n            }\r\n            <button type=\"submit\" />\r\n          </form>\r\n        </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppForm;\r\n","export default __webpack_public_path__ + \"static/media/warning.226ee508.svg\";","import React, { Component } from 'react';\r\nimport './ConfirmDialog.scss';\r\nimport { Dialog } from 'primereact/dialog';\r\nimport { Button } from 'primereact/button';\r\nimport SVG_warning from '../resources/icons/warning.svg';\r\nimport { AriaType, setAriaProps } from './AriaUtils';\r\n\r\nexport class ConfirmDialog extends Component {\r\n\r\n  componentDidUpdate() {\r\n    setAriaProps(AriaType.DIALOG, '.ac-confirm-dlg');\r\n  }\r\n\r\n  render() {\r\n    const footer = (\r\n        <div>\r\n            <Button label=\"Cancel\" className=\"p-button-secondary\" onClick={this.props.onHide} />\r\n            <Button label=\"OK\" onClick={this.props.onConfirm} />\r\n        </div>\r\n    );\r\n    return (\r\n        <Dialog\r\n            header={this.props.title}\r\n            footer={footer}\r\n            className=\"ac-confirm-dlg\"\r\n            appendTo={document.body}\r\n            visible={this.props.visible}\r\n            closable={true}\r\n            onHide={this.props.onHide}\r\n            focusOnShow={false}>\r\n                <div dangerouslySetInnerHTML={{ __html: this.props.msg }} />\r\n                \r\n                {this.props.subMsg &&\r\n                  <div>\r\n                    {this.props.icon && <img src={SVG_warning} alt='' />}\r\n                    <span className=\"ac-confirm-submsg\"\r\n                          dangerouslySetInnerHTML={{ __html: this.props.subMsg }} />\r\n                  </div>\r\n                }\r\n        </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ConfirmDialog;","export default __webpack_public_path__ + \"static/media/search.c22c62e9.svg\";","export default __webpack_public_path__ + \"static/media/edit.589a8276.svg\";","export default __webpack_public_path__ + \"static/media/delete.36473054.svg\";","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport './AppViewer.scss';\r\nimport '../resources/scss/AppProgressBar.scss';\r\nimport '../resources/scss/AppFilters.scss';\r\nimport '../resources/scss/AppSplitButton.scss';\r\nimport { SplitButton } from 'primereact/splitbutton';\r\nimport { Column } from 'primereact/column';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { APIBaseUrl, MoebServiceUrl, Platform, PlatformName, AppProperty } from '../utils/Constants';\r\nimport { InputText } from 'primereact/inputtext';\r\nimport { RadioButton } from 'primereact/radiobutton';\r\nimport { Notification } from '../utils/Notification';\r\nimport AppDetails from './AppDetails';\r\nimport AppForm from './AppForm';\r\nimport ConfirmDialog from '../utils/ConfirmDialog';\r\nimport Tooltip from '../utils/Tooltip';\r\nimport { AriaType, setAriaPropsAll } from '../utils/AriaUtils';\r\nimport SVG_Search from '../resources/icons/search.svg';\r\nimport SVG_Edit from '../resources/icons/edit.svg';\r\nimport SVG_Delete from '../resources/icons/delete.svg';\r\nimport i18n from '../i18n';\r\nimport { getWebIcon } from '../utils/AppIconUtils';\r\n\r\nclass AppViewer extends Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = { \r\n            appsList: null,\r\n            expandedRows: {},\r\n            globalFilter: null,\r\n            typeFilter: PlatformName.ALL,\r\n            error: false,\r\n            appFormType: null,\r\n            deletingApp: {},\r\n            editingApp: {},\r\n            workspace: null\r\n        }\r\n        this.renderName = this.renderName.bind(this);\r\n        this.renderActions = this.renderActions.bind(this);\r\n        this.rowExpansionTemplate = this.rowExpansionTemplate.bind(this);\r\n        this.addBtn = null;\r\n        this.addBtnVisible = false;\r\n        this.addItems = [\r\n            { label: i18n.t('constants.android'), icon: 'pi android', command: () => { this.onAdd(PlatformName.ANDROID) } },\r\n            { label: i18n.t('constants.desktop'), icon: 'pi desktop', command: () => { this.onAdd(PlatformName.WINDOWS) } },\r\n            { label: i18n.t('constants.ios'), icon: 'pi ios', command: () => { this.onAdd(PlatformName.IOS) } },\r\n            { label: i18n.t('constants.web'), icon: 'pi web', command:() => { this.onAdd(PlatformName.WEB) } }\r\n        ];\r\n        this.notification = null;\r\n        this.selectedAppId = null;\r\n        this.appsListString = null;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getWorkspace();\r\n        window.setTimeout(() => this.getAppsList(), 1000);\r\n        this.selectedAppId = this.props.selectedAppId;\r\n        this.selectedAppId && this.setState({ expandedRows: { [this.selectedAppId]: true} });\r\n\r\n        window.addEventListener('focus', () => {\r\n            // Refresh apps on focus\r\n            this.getAppsList(this.state.typeFilter, true);\r\n         }, false);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        setAriaPropsAll([\r\n            {type: AriaType.RADIO, selector: '.act-radiobutton'},\r\n            {type: AriaType.EXPAND, selector: 'td.act-expander'},\r\n            {type: AriaType.SPLIT, selector: '.act-splitbutton'}\r\n        ]);\r\n\r\n        const selApp = document.querySelector('.act-td-selected');\r\n        if (selApp) {\r\n            selApp.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'center' });\r\n            this.selectedAppId = null;\r\n        }\r\n    }\r\n\r\n    getWorkspace() {\r\n        const url = MoebServiceUrl\r\n            + '/com.ibm.rational.test.lt.core.moeb.services.applications.IApplicationService/'\r\n            + '?action=getCurrentWorkspace';\r\n        axios.get(url).then(response => {\r\n            this.setState({ workspace: response.data.localized_string });\r\n        })\r\n        .catch(() => {\r\n            console.log('The current workspace could not be retrieved');\r\n            this.setState({ workspace: '' });\r\n        });\r\n    }\r\n\r\n    getAppsList(type, ifModified) {\r\n        type = (type) ? type : PlatformName.ALL;\r\n        const url = APIBaseUrl + '/applications/' + type;\r\n        axios.get(url).then(response => {\r\n            const appsList = response.data.applications || [];\r\n            if (!ifModified || this.appsListString !== JSON.stringify(appsList)) {\r\n                this.appsListString = JSON.stringify(appsList);\r\n                this.setState({ appsList });\r\n            }\r\n        })\r\n        .catch(() => {\r\n            this.setState({error: true});\r\n        });\r\n    }\r\n\r\n    /*\r\n    * event handlers\r\n    */\r\n    onAdd(type) {\r\n        this.setState({ appFormType: type });\r\n    }\r\n    \r\n    refreshList = data => {\r\n        // Re-apply filter if needed\r\n        let typeFilter = data.typeFilter;\r\n        if (this.state.appFormType && this.state.appFormType !== data.typeFilter) {\r\n            typeFilter = PlatformName.ALL;\r\n            this.setState({typeFilter});\r\n        }\r\n\r\n        this.getAppsList(typeFilter);\r\n\r\n        this.onHide();\r\n        \r\n        // Expand the incoming app\r\n        if (data.appId) {\r\n            let expandedRows = this.state.expandedRows;\r\n            expandedRows[data.appId] = true;\r\n            this.setState({ expandedRows });\r\n        }\r\n    }\r\n\r\n    onHide = () => {\r\n        this.setState({ appFormType: null, deletingApp: {}, editingApp: {} }); // Hide all popup dialogs\r\n    }\r\n\r\n    onEdit = (e, rowData) => {\r\n        if (e.keyCode && e.keyCode !== 13) return;\r\n        e.stopPropagation();\r\n        this.setState({ appFormType: rowData[AppProperty.TYPE], editingApp: rowData });\r\n    }\r\n\r\n    onDelete = (e, rowData) => {\r\n        if (e.keyCode && e.keyCode !== 13) return;\r\n        e.stopPropagation();\r\n        const url = APIBaseUrl + '/tests/';\r\n        const data = { appid: rowData[AppProperty.ID] };\r\n        rowData.warning = '';\r\n        axios.post(url, data).then(response => {\r\n            if (response.data.tests.length > 0) {\r\n                rowData.warning = i18n.t('confirmdlg.warning');\r\n\r\n                if (response.data.tests.filter(t => t.workspace === this.state.workspace).length === 0) {\r\n                    rowData.warning = i18n.t('confirmdlg.warning-other-ws');\r\n                }\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log('Associated tests could not be retrieved');\r\n        })\r\n        .finally(() => {\r\n            this.setState({ deletingApp: rowData });\r\n        });\r\n    }\r\n\r\n    deleteApp = () => {\r\n        const appname = this.state.deletingApp[AppProperty.NAME];\r\n    \tconst typeFilter = this.state.typeFilter;\r\n        axios.delete(APIBaseUrl + '/application/' + this.state.deletingApp[AppProperty.ID]).then(() => {\r\n            this.refreshList({typeFilter});\r\n            this.notification.show(i18n.t('confirmdlg.notification', { appname }), [appname]);\r\n        })\r\n        .catch(this.onHide());\r\n    }\r\n\r\n    onFilterChange = (e) => {\r\n        this.setState({typeFilter: e.value, expandedRows: []});\r\n        this.getAppsList(e.value);\r\n    };\r\n    \r\n    rowExpansionTemplate(rowData) {\r\n        return (\r\n            <AppDetails app={rowData} workspace={this.state.workspace}/>\r\n        );\r\n    }\r\n\r\n    onRowToggle(e) {\r\n        this.setState({ expandedRows:e.data });\r\n    }\r\n\r\n    onRowClick(e) {\r\n        let expandedRows = this.state.expandedRows;\r\n        expandedRows[e.data[AppProperty.ID]] = (expandedRows[e.data[AppProperty.ID]]) ? null : true;\r\n        this.setState({ expandedRows });\r\n    }\r\n\r\n    onAddBtnToggle = (e) => {\r\n        if (e.keyCode && e.keyCode !== 13) return;\r\n        this.addBtnVisible ? this.addBtn.hide() : this.addBtn.show();\r\n        this.addBtnVisible = !this.addBtnVisible;\r\n    }\r\n\r\n    /*\r\n    * Render functions\r\n    */\r\n    renderVerdict() {\r\n        return (\r\n            <div className=\"act-td-verdict\"></div>\r\n        )\r\n    }\r\n\r\n    renderType(rowData) {\r\n        const pData = Platform.filter(p => p.type === rowData[AppProperty.TYPE])[0];\r\n        const appId = rowData[AppProperty.ID];\r\n        return (\r\n            <>\r\n                <Tooltip id={'_' + appId} placement=\"right\" text={pData.label} />\r\n                <div id={'_' + appId} className=\"act-td-type\">\r\n                    <img src={pData.svgtype} alt='' />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n    getAppIcon(rowData) {\r\n        if (!rowData[AppProperty.ICON]) {\r\n            if (rowData[AppProperty.TYPE] === PlatformName.WEB) {\r\n                getWebIcon(rowData[AppProperty.URL]).then(iconUrl => {\r\n                    rowData[AppProperty.ICON] = iconUrl;\r\n                    axios.put(APIBaseUrl + \"/application/\" + rowData[AppProperty.ID], rowData);\r\n                    this.refreshList(this.state.typeFilter);\r\n                })\r\n                .catch(() => {\r\n                    // Nope\r\n                });\r\n            }\r\n        }\r\n        return rowData[AppProperty.ICON] || '';\r\n    }\r\n\r\n    renderName(rowData) {\r\n        const divClassName = (rowData[AppProperty.ID] === this.selectedAppId) ? ' act-td-selected' : '';\r\n        const defaultIcon = Platform.filter(p => p.type === rowData[AppProperty.TYPE])[0].svg;\r\n        return (\r\n            <div className={'act-td-name' + divClassName} >\r\n                <img\r\n                    className=\"act-icon\"\r\n                    alt=''\r\n                    src={this.getAppIcon(rowData)}\r\n                    onLoad={(e) => {e.target.className += ' loaded'}}\r\n                    onError={((e) => {\r\n                        e.target.src = defaultIcon;\r\n                        rowData[AppProperty.ICON] = defaultIcon;\r\n                    })}\r\n                />\r\n                <img alt='' src={defaultIcon} />\r\n                <span>{rowData[AppProperty.NAME]}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderVersion(rowData) {\r\n        let version = (rowData[AppProperty.VERSION]) || '-';\r\n        return (\r\n            <div className=\"act-td-version\">\r\n                {version}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderDate(rowData) {\r\n        let date = new Date(rowData[AppProperty.DATE]);\r\n        return (\r\n            <div>\r\n                <span className=\"act-td-date\">{date.toLocaleDateString(i18n.language)}</span>\r\n                <div className=\"act-td-time\">{date.toLocaleTimeString(i18n.language)}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderActions(rowData) {\r\n        const appId = rowData[AppProperty.ID];\r\n        return (\r\n            <div>\r\n                <span tabIndex=\"0\" onClick={e => this.onEdit(e, rowData)} onKeyDown={e => this.onEdit(e, rowData)}>\r\n                    <Tooltip id={'_edit' + appId} placement=\"top\" text={i18n.t('appviewer.edit')} />\r\n                    <img\r\n                        id={'_edit' + appId}\r\n                        src={SVG_Edit} \r\n                        alt='' />\r\n                </span>\r\n                <span tabIndex=\"0\" onClick={e => this.onDelete(e, rowData)} onKeyDown={e => this.onDelete(e, rowData)}>\r\n                    <Tooltip id={'_delete' + appId} placement=\"top\" text={i18n.t('appviewer.delete')} />\r\n                    <img\r\n                        id={'_delete' + appId}\r\n                        src={SVG_Delete} \r\n                        alt='' />\r\n                </span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        \r\n        if (this.state.error) {\r\n            return (\r\n                <>{i18n.t('appviewer.fatal-error')}</>\r\n              );\r\n        }\r\n\r\n        if (!this.state.appsList) {\r\n            return (\r\n                <div className=\"ac-pb\">\r\n                  <div className=\"ac-pb-text\">{i18n.t('appviewer.loading')}</div>\r\n                  <div className=\"ac-pb-container\">\r\n                    <div className=\"ac-pb-content\" />\r\n                  </div>\r\n                </div>\r\n              );\r\n        }\r\n            \r\n        const header = (\r\n            <>\r\n                <div className=\"p-inputgroup act-search\" role=\"region\">\r\n                    <div>\r\n                        <span className=\"p-inputgroup-addon\">\r\n                            <img\r\n                                src={SVG_Search} \r\n                                alt='' />\r\n                        </span>\r\n                        <InputText\r\n                            placeholder={i18n.t('appviewer.search')}\r\n                            onInput={(e) => this.setState({ globalFilter: e.target.value })}\r\n                            className=\"ac-search-inputtext\"\r\n                            aria-label={i18n.t('appviewer.search')}\r\n                        />\r\n                        \r\n                    </div>\r\n                    <span className=\"act-splitbutton\"\r\n                        tabIndex=\"0\" onKeyDown={e => this.onAddBtnToggle(e)}>\r\n                        <SplitButton\r\n                            ref={el => this.addBtn = el}\r\n                            label={i18n.t('appviewer.add')} \r\n                            onClick={e => this.addBtn.show()}\r\n                            icon=\"pi pi-plus-circle\"\r\n                            model={this.addItems}\r\n                        />\r\n                    </span>\r\n                </div>\r\n\r\n                <div className=\"act-radiogroup\">\r\n                    {Platform.map(p => {\r\n                        return (\r\n                            <span key={p.type} className=\"act-radiobutton\">\r\n                                <RadioButton\r\n                                    value={p.type}\r\n                                    inputId={p.type}\r\n                                    onChange={this.onFilterChange}\r\n                                    checked={this.state.typeFilter === p.type}\r\n                                />\r\n                                <label htmlFor={p.type}>{p.label}</label>\r\n                            </span>\r\n                        )}\r\n                    )}\r\n                </div>\r\n            </>\r\n        );\r\n\r\n        const rowClassName = (rowData) => ({\r\n            'act-expanded-row': this.state.expandedRows[rowData.appid] ? true : false\r\n        });\r\n\r\n        const confirmVisible = (this.state.deletingApp[AppProperty.ID] !== undefined);\r\n        const confirmMsg = (confirmVisible)\r\n            ? i18n.t('confirmdlg.msg', { appname: '<span>' + this.state.deletingApp[AppProperty.NAME] + '</span>' })\r\n            : '';\r\n\r\n        return (\r\n            <div className=\"act\">\r\n                <AppForm \r\n                    visible={this.state.appFormType !== null || this.state.editingApp[AppProperty.ID] !== undefined}\r\n                    appType={this.state.appFormType}\r\n                    appProperties={this.state.editingApp}\r\n                    typeFilter={this.state.typeFilter}\r\n                    onActionPerformed={this.refreshList}\r\n                    onHide={this.onHide}\r\n                />\r\n                <DataTable\r\n                    className=\"act-table\"\r\n                    header={header}\r\n                    value={this.state.appsList}\r\n                    rowClassName={rowClassName}\r\n                    emptyMessage={i18n.t('appviewer.empty-msg')}\r\n                    expandedRows={this.state.expandedRows}\r\n                    onRowToggle={(e) => {this.onRowToggle(e)}}\r\n                    rowExpansionTemplate={this.rowExpansionTemplate}\r\n                    onRowClick={(e) => {this.onRowClick(e)}}\r\n                    dataKey=\"appid\"\r\n                    sortField=\"creationDate\"\r\n                    sortOrder={-1}\r\n                    globalFilter={this.state.globalFilter}>\r\n                        \r\n                    <Column expander header='&#8203;' style={{ width: '35px', paddingTop: '10px' }} className=\"act-expander\" />\r\n                    <Column field={AppProperty.DESCRIPTION} className=\"act-col-verdict\" header='&#8203;' body={this.renderVerdict} />\r\n                    <Column field={AppProperty.TYPE} header={i18n.t('appviewer.header-type')} style={{ width: '120px' }} body={this.renderType} sortable />\r\n                    <Column field={AppProperty.NAME} header={i18n.t('appviewer.header-name')} style={{ width: '50%' }} body={this.renderName} sortable />\r\n                    <Column field={AppProperty.VERSION} header={i18n.t('appviewer.header-version')} body={this.renderVersion} sortable />\r\n                    <Column field={AppProperty.DATE} header={i18n.t('appviewer.header-date')} body={this.renderDate} sortable />\r\n                    <Column className=\"act-col-actions\" header={i18n.t('appviewer.header-actions')} style={{ width: '12%' }} body={this.renderActions} />\r\n                    \r\n                </DataTable>\r\n\r\n                <div className=\"act-footer\" />\r\n\r\n                <ConfirmDialog\r\n                    title={i18n.t('confirmdlg.title')}\r\n                    msg={confirmMsg}\r\n                    icon={true}\r\n                    subMsg={this.state.deletingApp.warning}\r\n                    visible={confirmVisible}\r\n                    onHide={this.onHide}\r\n                    onConfirm={this.deleteApp}\r\n                />\r\n\r\n                <Notification ref={el => (this.notification = el)} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default AppViewer;\r\n","import React, { Component } from 'react';\r\nimport './shared/primereact-hcl.scss';\r\nimport './AppConfiguration.scss';\r\nimport {AppToolBar} from './components/AppToolBar';\r\nimport Feedback from './utils/Feedback';\r\nimport AppViewer from './components/AppViewer';\r\nimport i18n from './i18n';\r\nimport { AppProperty } from './utils/Constants';\r\n\r\nclass AppConfiguration extends Component {\r\n  \r\n  render() {\r\n    const selectedAppId = new URLSearchParams(window.location.search).get(AppProperty.ID);\r\n    return (\r\n      <div className=\"ac\">\r\n        <header>\r\n          <span className=\"ac-logo\"/>\r\n          <Feedback />\r\n        </header>\r\n        <div className=\"ac-container\">\r\n          <AppToolBar />\r\n          <main className=\"ac-content\">\r\n            <h1 className=\"ac-title\">{i18n.t('title')}</h1>\r\n\r\n            <div className=\"ac-separator\"></div>\r\n            <div className=\"ac-viewer\">\r\n              <AppViewer\r\n                selectedAppId={selectedAppId}/>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppConfiguration;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"primereact/resources/themes/nova-light/theme.css\";\r\nimport \"primereact/resources/primereact.min.css\";\r\nimport './shared/primereact-hcl.scss';\r\nimport 'bootstrap/scss/bootstrap.scss';\r\nimport './index.scss';\r\nimport AppConfiguration from './AppConfiguration';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'primeicons/primeicons.css';\r\n\r\nReactDOM.render(<AppConfiguration />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}